ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_2_initVar
  20              		.bss
  21              		.type	ADC_2_initVar, %object
  22              		.size	ADC_2_initVar, 1
  23              	ADC_2_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_2_offset,2,2
  26              		.comm	ADC_2_countsPerVolt,2,2
  27              		.comm	ADC_2_countsPer10Volt,4,4
  28              		.comm	ADC_2_shift,2,2
  29              		.section	.text.ADC_2_Start,"ax",%progbits
  30              		.align	2
  31              		.global	ADC_2_Start
  32              		.thumb
  33              		.thumb_func
  34              		.type	ADC_2_Start, %function
  35              	ADC_2_Start:
  36              	.LFB0:
  37              		.file 1 "Generated_Source\\PSoC5\\ADC_2.c"
   1:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_2.c **** * File Name: ADC_2.c
   3:Generated_Source\PSoC5/ADC_2.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_2.c **** *
   5:Generated_Source\PSoC5/ADC_2.c **** * Description:
   6:Generated_Source\PSoC5/ADC_2.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_2.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_2.c **** *
   9:Generated_Source\PSoC5/ADC_2.c **** * Note:
  10:Generated_Source\PSoC5/ADC_2.c **** *
  11:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_2.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_2.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_2.c **** 
  18:Generated_Source\PSoC5/ADC_2.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_2.c **** #include "ADC_2.h"
  20:Generated_Source\PSoC5/ADC_2.c **** 
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 2


  21:Generated_Source\PSoC5/ADC_2.c **** #if(ADC_2_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_2.c ****     #include "ADC_2_theACLK.h"
  23:Generated_Source\PSoC5/ADC_2.c **** #endif /* End ADC_2_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_2.c **** 
  25:Generated_Source\PSoC5/ADC_2.c **** 
  26:Generated_Source\PSoC5/ADC_2.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_2.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_2.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_2.c **** static void ADC_2_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_2.c **** 
  31:Generated_Source\PSoC5/ADC_2.c **** 
  32:Generated_Source\PSoC5/ADC_2.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_2.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_2.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_2.c **** uint8 ADC_2_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_2.c **** volatile int16 ADC_2_offset;
  37:Generated_Source\PSoC5/ADC_2.c **** volatile int16 ADC_2_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_2.c **** volatile int32 ADC_2_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_2.c **** volatile int16 ADC_2_shift;
  40:Generated_Source\PSoC5/ADC_2.c **** 
  41:Generated_Source\PSoC5/ADC_2.c **** 
  42:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_Start
  44:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_2.c **** *
  46:Generated_Source\PSoC5/ADC_2.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_2.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Enable() function.
  51:Generated_Source\PSoC5/ADC_2.c **** *
  52:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_2.c **** *  None.
  54:Generated_Source\PSoC5/ADC_2.c **** *
  55:Generated_Source\PSoC5/ADC_2.c **** * Return:
  56:Generated_Source\PSoC5/ADC_2.c **** *  None.
  57:Generated_Source\PSoC5/ADC_2.c **** *
  58:Generated_Source\PSoC5/ADC_2.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_2.c **** *  The ADC_2_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_2.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_2.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_2.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Start() routine.
  64:Generated_Source\PSoC5/ADC_2.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_2.c **** *  to zero before call of ADC_2_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Init() and ADC_2_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Start() routine.
  68:Generated_Source\PSoC5/ADC_2.c **** *
  69:Generated_Source\PSoC5/ADC_2.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_2.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Enable() function.
  72:Generated_Source\PSoC5/ADC_2.c **** *
  73:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_Start(void)
  75:Generated_Source\PSoC5/ADC_2.c **** {
  38              		.loc 1 75 0
  39              		.cfi_startproc
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 3


  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  76:Generated_Source\PSoC5/ADC_2.c **** 
  77:Generated_Source\PSoC5/ADC_2.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_2.c ****     if(ADC_2_initVar == 0u)
  48              		.loc 1 78 0
  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  79:Generated_Source\PSoC5/ADC_2.c ****     {
  80:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_Init();
  53              		.loc 1 80 0
  54 000c FFF7FEFF 		bl	ADC_2_Init
  81:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_initVar = 1u;
  55              		.loc 1 81 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		movs	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  82:Generated_Source\PSoC5/ADC_2.c ****     }
  83:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_Enable();
  60              		.loc 1 83 0
  61 0016 FFF7FEFF 		bl	ADC_2_Enable
  84:Generated_Source\PSoC5/ADC_2.c **** }
  62              		.loc 1 84 0
  63 001a 00BF     		nop
  64 001c 80BD     		pop	{r7, pc}
  65              	.L4:
  66 001e 00BF     		.align	2
  67              	.L3:
  68 0020 00000000 		.word	ADC_2_initVar
  69              		.cfi_endproc
  70              	.LFE0:
  71              		.size	ADC_2_Start, .-ADC_2_Start
  72              		.section	.text.ADC_2_Init,"ax",%progbits
  73              		.align	2
  74              		.global	ADC_2_Init
  75              		.thumb
  76              		.thumb_func
  77              		.type	ADC_2_Init, %function
  78              	ADC_2_Init:
  79              	.LFB1:
  85:Generated_Source\PSoC5/ADC_2.c **** 
  86:Generated_Source\PSoC5/ADC_2.c **** 
  87:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_Init
  89:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_2.c **** *
  91:Generated_Source\PSoC5/ADC_2.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_2.c **** *  Initialize component's parameters to the parameters set by user in the
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 4


  93:Generated_Source\PSoC5/ADC_2.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_Start().
  95:Generated_Source\PSoC5/ADC_2.c **** *
  96:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_2.c **** *  None.
  98:Generated_Source\PSoC5/ADC_2.c **** *
  99:Generated_Source\PSoC5/ADC_2.c **** * Return:
 100:Generated_Source\PSoC5/ADC_2.c **** *  None.
 101:Generated_Source\PSoC5/ADC_2.c **** *
 102:Generated_Source\PSoC5/ADC_2.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_2.c **** *  The ADC_2_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_2.c **** *
 105:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_Init(void)
 107:Generated_Source\PSoC5/ADC_2.c **** {
  80              		.loc 1 107 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/ADC_2.c **** 
 109:Generated_Source\PSoC5/ADC_2.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_2.c ****     #endif /* End ADC_2_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_2.c **** 
 114:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_2.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_2.c ****         CyIntSetPriority(ADC_2_INTC_NUMBER, ADC_2_INTC_PRIOR_NUMBER);
  90              		.loc 1 116 0
  91 0004 0721     		movs	r1, #7
  92 0006 0120     		movs	r0, #1
  93 0008 FFF7FEFF 		bl	CyIntSetPriority
 117:Generated_Source\PSoC5/ADC_2.c ****         (void)CyIntSetVector(ADC_2_INTC_NUMBER, &ADC_2_ISR);
  94              		.loc 1 117 0
  95 000c 0949     		ldr	r1, .L6
  96 000e 0120     		movs	r0, #1
  97 0010 FFF7FEFF 		bl	CyIntSetVector
 118:Generated_Source\PSoC5/ADC_2.c ****     #endif   /* End ADC_2_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_2.c **** 
 120:Generated_Source\PSoC5/ADC_2.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_CSR1_REG |= ADC_2_SAR_IRQ_MASK_EN | ADC_2_SAR_IRQ_MODE_EDGE;
  98              		.loc 1 121 0
  99 0014 084A     		ldr	r2, .L6+4
 100 0016 084B     		ldr	r3, .L6+4
 101 0018 1B78     		ldrb	r3, [r3]
 102 001a DBB2     		uxtb	r3, r3
 103 001c 43F00603 		orr	r3, r3, #6
 104 0020 DBB2     		uxtb	r3, r3
 105 0022 1370     		strb	r3, [r2]
 122:Generated_Source\PSoC5/ADC_2.c **** 
 123:Generated_Source\PSoC5/ADC_2.c ****     /*Set SAR ADC resolution ADC */
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 5


 124:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SetResolution(ADC_2_DEFAULT_RESOLUTION);
 106              		.loc 1 124 0
 107 0024 0C20     		movs	r0, #12
 108 0026 FFF7FEFF 		bl	ADC_2_SetResolution
 125:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_offset = 0;
 109              		.loc 1 125 0
 110 002a 044B     		ldr	r3, .L6+8
 111 002c 0022     		movs	r2, #0
 112 002e 1A80     		strh	r2, [r3]	@ movhi
 126:Generated_Source\PSoC5/ADC_2.c **** }
 113              		.loc 1 126 0
 114 0030 00BF     		nop
 115 0032 80BD     		pop	{r7, pc}
 116              	.L7:
 117              		.align	2
 118              	.L6:
 119 0034 00000000 		.word	ADC_2_ISR
 120 0038 01590040 		.word	1073764609
 121 003c 00000000 		.word	ADC_2_offset
 122              		.cfi_endproc
 123              	.LFE1:
 124              		.size	ADC_2_Init, .-ADC_2_Init
 125              		.section	.text.ADC_2_Enable,"ax",%progbits
 126              		.align	2
 127              		.global	ADC_2_Enable
 128              		.thumb
 129              		.thumb_func
 130              		.type	ADC_2_Enable, %function
 131              	ADC_2_Enable:
 132              	.LFB2:
 127:Generated_Source\PSoC5/ADC_2.c **** 
 128:Generated_Source\PSoC5/ADC_2.c **** 
 129:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_Enable
 131:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_2.c **** *
 133:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_2.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_2.c **** *
 136:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_2.c **** *  None.
 138:Generated_Source\PSoC5/ADC_2.c **** *
 139:Generated_Source\PSoC5/ADC_2.c **** * Return:
 140:Generated_Source\PSoC5/ADC_2.c **** *  None.
 141:Generated_Source\PSoC5/ADC_2.c **** *
 142:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_Enable(void)
 144:Generated_Source\PSoC5/ADC_2.c **** {
 133              		.loc 1 144 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 6


 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/ADC_2.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/ADC_2.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_2.c ****     enableInterrupts = CyEnterCriticalSection();
 145              		.loc 1 147 0
 146 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 147 000a 0346     		mov	r3, r0
 148 000c FB71     		strb	r3, [r7, #7]
 148:Generated_Source\PSoC5/ADC_2.c **** 
 149:Generated_Source\PSoC5/ADC_2.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_PWRMGR_SAR_REG |= ADC_2_ACT_PWR_SAR_EN;
 149              		.loc 1 150 0
 150 000e 264A     		ldr	r2, .L9
 151 0010 254B     		ldr	r3, .L9
 152 0012 1B78     		ldrb	r3, [r3]
 153 0014 DBB2     		uxtb	r3, r3
 154 0016 43F00103 		orr	r3, r3, #1
 155 001a DBB2     		uxtb	r3, r3
 156 001c 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC5/ADC_2.c **** 
 152:Generated_Source\PSoC5/ADC_2.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_STBY_PWRMGR_SAR_REG |= ADC_2_STBY_PWR_SAR_EN;
 157              		.loc 1 153 0
 158 001e 234A     		ldr	r2, .L9+4
 159 0020 224B     		ldr	r3, .L9+4
 160 0022 1B78     		ldrb	r3, [r3]
 161 0024 DBB2     		uxtb	r3, r3
 162 0026 43F00103 		orr	r3, r3, #1
 163 002a DBB2     		uxtb	r3, r3
 164 002c 1370     		strb	r3, [r2]
 154:Generated_Source\PSoC5/ADC_2.c **** 
 155:Generated_Source\PSoC5/ADC_2.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_PWRMGR_CLK_REG |= ADC_2_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_STBY_PWRMGR_CLK_REG |= ADC_2_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_2.c ****     #endif /* End ADC_2_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_2.c **** 
 161:Generated_Source\PSoC5/ADC_2.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_2.c ****     tmpReg = ADC_2_SAR_CSR3_REG;
 165              		.loc 1 162 0
 166 002e 204B     		ldr	r3, .L9+8
 167 0030 1B78     		ldrb	r3, [r3]
 168 0032 BB71     		strb	r3, [r7, #6]
 163:Generated_Source\PSoC5/ADC_2.c ****     tmpReg |= ADC_2_SAR_EN_BUF_VCM_EN;
 169              		.loc 1 163 0
 170 0034 BB79     		ldrb	r3, [r7, #6]
 171 0036 43F00203 		orr	r3, r3, #2
 172 003a BB71     		strb	r3, [r7, #6]
 164:Generated_Source\PSoC5/ADC_2.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_2.c ****     #if((ADC_2_DEFAULT_REFERENCE == ADC_2__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_2.c ****         (ADC_2_DEFAULT_RANGE == ADC_2__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_2.c ****         tmpReg &= (uint8)~ADC_2_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_2.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_2.c ****         tmpReg |= ADC_2_SAR_EN_BUF_VREF_EN;
 173              		.loc 1 169 0
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 7


 174 003c BB79     		ldrb	r3, [r7, #6]
 175 003e 43F00103 		orr	r3, r3, #1
 176 0042 BB71     		strb	r3, [r7, #6]
 170:Generated_Source\PSoC5/ADC_2.c ****     #endif /* ADC_2_DEFAULT_REFERENCE == ADC_2__EXT_REF */
 171:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_CSR3_REG = tmpReg;
 177              		.loc 1 171 0
 178 0044 1A4A     		ldr	r2, .L9+8
 179 0046 BB79     		ldrb	r3, [r7, #6]
 180 0048 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/ADC_2.c **** 
 173:Generated_Source\PSoC5/ADC_2.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_DEFAULT_RANGE == ADC_2__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_2.c ****         #if(ADC_2_DEFAULT_REFERENCE == ADC_2__EXT_REF)
 176:Generated_Source\PSoC5/ADC_2.c ****             ADC_2_SAR_CSR6_REG = ADC_2_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_2.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_2.c ****             ADC_2_SAR_CSR6_REG = ADC_2_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_2.c ****         #endif /* ADC_2_DEFAULT_REFERENCE == ADC_2__EXT_REF */
 180:Generated_Source\PSoC5/ADC_2.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_2.c ****         #if(ADC_2_DEFAULT_REFERENCE == ADC_2__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_2.c ****             ADC_2_SAR_CSR6_REG = ADC_2_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/ADC_2.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_2.c ****             ADC_2_SAR_CSR6_REG = ADC_2_INT_BYPASS_EXT_VREF; /* S2 */
 181              		.loc 1 184 0
 182 004a 1A4B     		ldr	r3, .L9+12
 183 004c 0422     		movs	r2, #4
 184 004e 1A70     		strb	r2, [r3]
 185:Generated_Source\PSoC5/ADC_2.c ****         #endif /* ADC_2_DEFAULT_REFERENCE == ADC_2__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_2.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_2.c **** 
 188:Generated_Source\PSoC5/ADC_2.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_SAR_CSR5_REG &= (uint8)~ADC_2_SAR_DLY_INC;
 185              		.loc 1 190 0
 186 0050 194A     		ldr	r2, .L9+16
 187 0052 194B     		ldr	r3, .L9+16
 188 0054 1B78     		ldrb	r3, [r3]
 189 0056 DBB2     		uxtb	r3, r3
 190 0058 23F04003 		bic	r3, r3, #64
 191 005c DBB2     		uxtb	r3, r3
 192 005e 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/ADC_2.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_SAR_CSR5_REG |= ADC_2_SAR_DLY_INC;
 193:Generated_Source\PSoC5/ADC_2.c ****     #endif /* ADC_2_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_2.c **** 
 195:Generated_Source\PSoC5/ADC_2.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_2.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_2.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_2.c ****     */
 199:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_SAR_CSR5_REG |= ADC_2_SAR_SEL_CSEL_DFT_CHAR;
 193              		.loc 1 200 0
 194 0060 154A     		ldr	r2, .L9+16
 195 0062 154B     		ldr	r3, .L9+16
 196 0064 1B78     		ldrb	r3, [r3]
 197 0066 DBB2     		uxtb	r3, r3
 198 0068 43F00303 		orr	r3, r3, #3
 199 006c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 8


 200 006e 1370     		strb	r3, [r2]
 201:Generated_Source\PSoC5/ADC_2.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_SAR_CSR5_REG &= (uint8)~ADC_2_SAR_SEL_CSEL_DFT_CHAR;
 203:Generated_Source\PSoC5/ADC_2.c ****     #endif /* ADC_2_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_2.c **** 
 205:Generated_Source\PSoC5/ADC_2.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_CSR0_REG = (uint8)((uint8)ADC_2_DEFAULT_POWER << ADC_2_SAR_POWER_SHIFT)
 201              		.loc 1 206 0
 202 0070 124B     		ldr	r3, .L9+20
 203 0072 0E22     		movs	r2, #14
 204 0074 1A70     		strb	r2, [r3]
 207:Generated_Source\PSoC5/ADC_2.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_2.c ****     #if ((CY_PSOC5LP) || (ADC_2_DEFAULT_REFERENCE != ADC_2__EXT_REF))
 209:Generated_Source\PSoC5/ADC_2.c ****         | ADC_2_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_2.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_2.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_DEFAULT_CONV_MODE != ADC_2__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_2.c ****         | ADC_2_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_2.c ****         | ADC_2_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_2.c ****     #endif /* ADC_2_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_2.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_2.c **** 
 218:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_TR0_REG = ADC_2_SAR_CAP_TRIM_2;
 205              		.loc 1 218 0
 206 0076 124B     		ldr	r3, .L9+24
 207 0078 0222     		movs	r2, #2
 208 007a 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/ADC_2.c **** 
 220:Generated_Source\PSoC5/ADC_2.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_CLK_REG |= ADC_2_SAR_MX_CLK_EN;
 209              		.loc 1 221 0
 210 007c 114A     		ldr	r2, .L9+28
 211 007e 114B     		ldr	r3, .L9+28
 212 0080 1B78     		ldrb	r3, [r3]
 213 0082 DBB2     		uxtb	r3, r3
 214 0084 43F00803 		orr	r3, r3, #8
 215 0088 DBB2     		uxtb	r3, r3
 216 008a 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/ADC_2.c **** 
 223:Generated_Source\PSoC5/ADC_2.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 217              		.loc 1 223 0
 218 008c 0A20     		movs	r0, #10
 219 008e FFF7FEFF 		bl	CyDelayUs
 224:Generated_Source\PSoC5/ADC_2.c **** 
 225:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_2.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_2.c ****         CyIntClearPending(ADC_2_INTC_NUMBER);
 220              		.loc 1 227 0
 221 0092 0D4B     		ldr	r3, .L9+32
 222 0094 0222     		movs	r2, #2
 223 0096 1A60     		str	r2, [r3]
 228:Generated_Source\PSoC5/ADC_2.c ****     #endif   /* End ADC_2_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_2.c **** 
 230:Generated_Source\PSoC5/ADC_2.c ****     CyExitCriticalSection(enableInterrupts);
 224              		.loc 1 230 0
 225 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 226 009a 1846     		mov	r0, r3
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 9


 227 009c FFF7FEFF 		bl	CyExitCriticalSection
 231:Generated_Source\PSoC5/ADC_2.c **** }
 228              		.loc 1 231 0
 229 00a0 00BF     		nop
 230 00a2 0837     		adds	r7, r7, #8
 231              		.cfi_def_cfa_offset 8
 232 00a4 BD46     		mov	sp, r7
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 00a6 80BD     		pop	{r7, pc}
 236              	.L10:
 237              		.align	2
 238              	.L9:
 239 00a8 AB430040 		.word	1073759147
 240 00ac BB430040 		.word	1073759163
 241 00b0 03590040 		.word	1073764611
 242 00b4 06590040 		.word	1073764614
 243 00b8 05590040 		.word	1073764613
 244 00bc 00590040 		.word	1073764608
 245 00c0 14460040 		.word	1073759764
 246 00c4 275B0040 		.word	1073765159
 247 00c8 80E200E0 		.word	-536812928
 248              		.cfi_endproc
 249              	.LFE2:
 250              		.size	ADC_2_Enable, .-ADC_2_Enable
 251              		.section	.text.ADC_2_Stop,"ax",%progbits
 252              		.align	2
 253              		.global	ADC_2_Stop
 254              		.thumb
 255              		.thumb_func
 256              		.type	ADC_2_Stop, %function
 257              	ADC_2_Stop:
 258              	.LFB3:
 232:Generated_Source\PSoC5/ADC_2.c **** 
 233:Generated_Source\PSoC5/ADC_2.c **** 
 234:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_Stop
 236:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_2.c **** *
 238:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_2.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_2.c **** *
 241:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_2.c **** *  None.
 243:Generated_Source\PSoC5/ADC_2.c **** *
 244:Generated_Source\PSoC5/ADC_2.c **** * Return:
 245:Generated_Source\PSoC5/ADC_2.c **** *  None.
 246:Generated_Source\PSoC5/ADC_2.c **** *
 247:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_Stop(void)
 249:Generated_Source\PSoC5/ADC_2.c **** {
 259              		.loc 1 249 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 8
 262              		@ frame_needed = 1, uses_anonymous_args = 0
 263 0000 80B5     		push	{r7, lr}
 264              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 10


 265              		.cfi_offset 7, -8
 266              		.cfi_offset 14, -4
 267 0002 82B0     		sub	sp, sp, #8
 268              		.cfi_def_cfa_offset 16
 269 0004 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
 250:Generated_Source\PSoC5/ADC_2.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_2.c ****     enableInterrupts = CyEnterCriticalSection();
 271              		.loc 1 251 0
 272 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 273 000a 0346     		mov	r3, r0
 274 000c FB71     		strb	r3, [r7, #7]
 252:Generated_Source\PSoC5/ADC_2.c **** 
 253:Generated_Source\PSoC5/ADC_2.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_CSR0_REG &= (uint8)~ADC_2_SAR_SOF_START_CONV;
 275              		.loc 1 254 0
 276 000e 104A     		ldr	r2, .L12
 277 0010 0F4B     		ldr	r3, .L12
 278 0012 1B78     		ldrb	r3, [r3]
 279 0014 DBB2     		uxtb	r3, r3
 280 0016 23F00103 		bic	r3, r3, #1
 281 001a DBB2     		uxtb	r3, r3
 282 001c 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/ADC_2.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_PWRMGR_SAR_REG &= (uint8)~ADC_2_ACT_PWR_SAR_EN;
 283              		.loc 1 256 0
 284 001e 0D4A     		ldr	r2, .L12+4
 285 0020 0C4B     		ldr	r3, .L12+4
 286 0022 1B78     		ldrb	r3, [r3]
 287 0024 DBB2     		uxtb	r3, r3
 288 0026 23F00103 		bic	r3, r3, #1
 289 002a DBB2     		uxtb	r3, r3
 290 002c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/ADC_2.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_2_STBY_PWR_SAR_EN;
 291              		.loc 1 258 0
 292 002e 0A4A     		ldr	r2, .L12+8
 293 0030 094B     		ldr	r3, .L12+8
 294 0032 1B78     		ldrb	r3, [r3]
 295 0034 DBB2     		uxtb	r3, r3
 296 0036 23F00103 		bic	r3, r3, #1
 297 003a DBB2     		uxtb	r3, r3
 298 003c 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/ADC_2.c **** 
 260:Generated_Source\PSoC5/ADC_2.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_2.c ****     #if(ADC_2_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_PWRMGR_CLK_REG &= (uint8)~ADC_2_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_2_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/ADC_2.c ****     #endif /* End ADC_2_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_2.c **** 
 266:Generated_Source\PSoC5/ADC_2.c ****     CyExitCriticalSection(enableInterrupts);
 299              		.loc 1 266 0
 300 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 301 0040 1846     		mov	r0, r3
 302 0042 FFF7FEFF 		bl	CyExitCriticalSection
 267:Generated_Source\PSoC5/ADC_2.c **** 
 268:Generated_Source\PSoC5/ADC_2.c **** }
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 11


 303              		.loc 1 268 0
 304 0046 00BF     		nop
 305 0048 0837     		adds	r7, r7, #8
 306              		.cfi_def_cfa_offset 8
 307 004a BD46     		mov	sp, r7
 308              		.cfi_def_cfa_register 13
 309              		@ sp needed
 310 004c 80BD     		pop	{r7, pc}
 311              	.L13:
 312 004e 00BF     		.align	2
 313              	.L12:
 314 0050 00590040 		.word	1073764608
 315 0054 AB430040 		.word	1073759147
 316 0058 BB430040 		.word	1073759163
 317              		.cfi_endproc
 318              	.LFE3:
 319              		.size	ADC_2_Stop, .-ADC_2_Stop
 320              		.section	.text.ADC_2_SetPower,"ax",%progbits
 321              		.align	2
 322              		.global	ADC_2_SetPower
 323              		.thumb
 324              		.thumb_func
 325              		.type	ADC_2_SetPower, %function
 326              	ADC_2_SetPower:
 327              	.LFB4:
 269:Generated_Source\PSoC5/ADC_2.c **** 
 270:Generated_Source\PSoC5/ADC_2.c **** 
 271:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_SetPower
 273:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_2.c **** *
 275:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_2.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_2.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_2.c **** *
 279:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_2.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_2.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_2.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_2.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_2.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_2.c **** *
 286:Generated_Source\PSoC5/ADC_2.c **** * Return:
 287:Generated_Source\PSoC5/ADC_2.c **** *  None.
 288:Generated_Source\PSoC5/ADC_2.c **** *
 289:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_2.c **** {
 328              		.loc 1 291 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 16
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333 0000 80B4     		push	{r7}
 334              		.cfi_def_cfa_offset 4
 335              		.cfi_offset 7, -4
 336 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 12


 337              		.cfi_def_cfa_offset 24
 338 0004 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 340 0006 0346     		mov	r3, r0
 341 0008 FB71     		strb	r3, [r7, #7]
 292:Generated_Source\PSoC5/ADC_2.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_2.c **** 
 294:Generated_Source\PSoC5/ADC_2.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_2.c ****     power &= ADC_2_SAR_API_POWER_MASK;
 342              		.loc 1 295 0
 343 000a FB79     		ldrb	r3, [r7, #7]
 344 000c 03F00303 		and	r3, r3, #3
 345 0010 FB71     		strb	r3, [r7, #7]
 296:Generated_Source\PSoC5/ADC_2.c **** 
 297:Generated_Source\PSoC5/ADC_2.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_2.c ****     tmpReg = ADC_2_SAR_CSR0_REG & (uint8)~ADC_2_SAR_POWER_MASK;
 346              		.loc 1 298 0
 347 0012 0A4B     		ldr	r3, .L15
 348 0014 1B78     		ldrb	r3, [r3]
 349 0016 DBB2     		uxtb	r3, r3
 350 0018 03F03F03 		and	r3, r3, #63
 351 001c FB73     		strb	r3, [r7, #15]
 299:Generated_Source\PSoC5/ADC_2.c ****     tmpReg |= (uint8)(power << ADC_2_SAR_POWER_SHIFT);
 352              		.loc 1 299 0
 353 001e FB79     		ldrb	r3, [r7, #7]
 354 0020 9B01     		lsls	r3, r3, #6
 355 0022 DAB2     		uxtb	r2, r3
 356 0024 FB7B     		ldrb	r3, [r7, #15]
 357 0026 1343     		orrs	r3, r3, r2
 358 0028 FB73     		strb	r3, [r7, #15]
 300:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_CSR0_REG = tmpReg;
 359              		.loc 1 300 0
 360 002a 044A     		ldr	r2, .L15
 361 002c FB7B     		ldrb	r3, [r7, #15]
 362 002e 1370     		strb	r3, [r2]
 301:Generated_Source\PSoC5/ADC_2.c **** }
 363              		.loc 1 301 0
 364 0030 00BF     		nop
 365 0032 1437     		adds	r7, r7, #20
 366              		.cfi_def_cfa_offset 4
 367 0034 BD46     		mov	sp, r7
 368              		.cfi_def_cfa_register 13
 369              		@ sp needed
 370 0036 80BC     		pop	{r7}
 371              		.cfi_restore 7
 372              		.cfi_def_cfa_offset 0
 373 0038 7047     		bx	lr
 374              	.L16:
 375 003a 00BF     		.align	2
 376              	.L15:
 377 003c 00590040 		.word	1073764608
 378              		.cfi_endproc
 379              	.LFE4:
 380              		.size	ADC_2_SetPower, .-ADC_2_SetPower
 381              		.section	.text.ADC_2_SetResolution,"ax",%progbits
 382              		.align	2
 383              		.global	ADC_2_SetResolution
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 13


 384              		.thumb
 385              		.thumb_func
 386              		.type	ADC_2_SetResolution, %function
 387              	ADC_2_SetResolution:
 388              	.LFB5:
 302:Generated_Source\PSoC5/ADC_2.c **** 
 303:Generated_Source\PSoC5/ADC_2.c **** 
 304:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_SetResolution
 306:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_2.c **** *
 308:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_2.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_2.c **** *
 311:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_2.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_2.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_2.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_2.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_2.c **** *
 317:Generated_Source\PSoC5/ADC_2.c **** * Return:
 318:Generated_Source\PSoC5/ADC_2.c **** *  None.
 319:Generated_Source\PSoC5/ADC_2.c **** *
 320:Generated_Source\PSoC5/ADC_2.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_2.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_2.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_2.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_2.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_2.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_2.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_2.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_2.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_2.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_2.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_2.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_2.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_2.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_2.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_2.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_2.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_2.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_2.c **** *
 339:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_2.c **** {
 389              		.loc 1 341 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 16
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393 0000 80B5     		push	{r7, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 84B0     		sub	sp, sp, #16
 398              		.cfi_def_cfa_offset 24
 399 0004 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 14


 401 0006 0346     		mov	r3, r0
 402 0008 FB71     		strb	r3, [r7, #7]
 342:Generated_Source\PSoC5/ADC_2.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_2.c **** 
 344:Generated_Source\PSoC5/ADC_2.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_2.c ****     switch (resolution)
 403              		.loc 1 345 0
 404 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 405 000c 0A2B     		cmp	r3, #10
 406 000e 07D0     		beq	.L19
 407 0010 0C2B     		cmp	r3, #12
 408 0012 02D0     		beq	.L20
 409 0014 082B     		cmp	r3, #8
 410 0016 06D0     		beq	.L21
 411 0018 08E0     		b	.L23
 412              	.L20:
 346:Generated_Source\PSoC5/ADC_2.c ****     {
 347:Generated_Source\PSoC5/ADC_2.c ****         case (uint8)ADC_2__BITS_12:
 348:Generated_Source\PSoC5/ADC_2.c ****             tmpReg = ADC_2_SAR_RESOLUTION_12BIT | ADC_2_SAR_SAMPLE_WIDTH;
 413              		.loc 1 348 0
 414 001a C423     		movs	r3, #196
 415 001c FB73     		strb	r3, [r7, #15]
 349:Generated_Source\PSoC5/ADC_2.c ****             break;
 416              		.loc 1 349 0
 417 001e 0BE0     		b	.L22
 418              	.L19:
 350:Generated_Source\PSoC5/ADC_2.c ****         case (uint8)ADC_2__BITS_10:
 351:Generated_Source\PSoC5/ADC_2.c ****             tmpReg = ADC_2_SAR_RESOLUTION_10BIT | ADC_2_SAR_SAMPLE_WIDTH;
 419              		.loc 1 351 0
 420 0020 8423     		movs	r3, #132
 421 0022 FB73     		strb	r3, [r7, #15]
 352:Generated_Source\PSoC5/ADC_2.c ****             break;
 422              		.loc 1 352 0
 423 0024 08E0     		b	.L22
 424              	.L21:
 353:Generated_Source\PSoC5/ADC_2.c ****         case (uint8)ADC_2__BITS_8:
 354:Generated_Source\PSoC5/ADC_2.c ****             tmpReg = ADC_2_SAR_RESOLUTION_8BIT | ADC_2_SAR_SAMPLE_WIDTH;
 425              		.loc 1 354 0
 426 0026 4423     		movs	r3, #68
 427 0028 FB73     		strb	r3, [r7, #15]
 355:Generated_Source\PSoC5/ADC_2.c ****             break;
 428              		.loc 1 355 0
 429 002a 05E0     		b	.L22
 430              	.L23:
 356:Generated_Source\PSoC5/ADC_2.c ****         default:
 357:Generated_Source\PSoC5/ADC_2.c ****             tmpReg = ADC_2_SAR_RESOLUTION_12BIT | ADC_2_SAR_SAMPLE_WIDTH;
 431              		.loc 1 357 0
 432 002c C423     		movs	r3, #196
 433 002e FB73     		strb	r3, [r7, #15]
 358:Generated_Source\PSoC5/ADC_2.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_2.c ****             CYASSERT(0u != 0u);
 434              		.loc 1 359 0
 435 0030 0020     		movs	r0, #0
 436 0032 FFF7FEFF 		bl	CyHalt
 360:Generated_Source\PSoC5/ADC_2.c ****             break;
 437              		.loc 1 360 0
 438 0036 00BF     		nop
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 15


 439              	.L22:
 361:Generated_Source\PSoC5/ADC_2.c ****     }
 362:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_SAR_CSR2_REG = tmpReg;
 440              		.loc 1 362 0
 441 0038 054A     		ldr	r2, .L24
 442 003a FB7B     		ldrb	r3, [r7, #15]
 443 003c 1370     		strb	r3, [r2]
 363:Generated_Source\PSoC5/ADC_2.c **** 
 364:Generated_Source\PSoC5/ADC_2.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_CalcGain(resolution);
 444              		.loc 1 365 0
 445 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 446 0040 1846     		mov	r0, r3
 447 0042 FFF7FEFF 		bl	ADC_2_CalcGain
 366:Generated_Source\PSoC5/ADC_2.c **** }
 448              		.loc 1 366 0
 449 0046 00BF     		nop
 450 0048 1037     		adds	r7, r7, #16
 451              		.cfi_def_cfa_offset 8
 452 004a BD46     		mov	sp, r7
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 004c 80BD     		pop	{r7, pc}
 456              	.L25:
 457 004e 00BF     		.align	2
 458              	.L24:
 459 0050 02590040 		.word	1073764610
 460              		.cfi_endproc
 461              	.LFE5:
 462              		.size	ADC_2_SetResolution, .-ADC_2_SetResolution
 463              		.section	.text.ADC_2_IsEndConversion,"ax",%progbits
 464              		.align	2
 465              		.global	ADC_2_IsEndConversion
 466              		.thumb
 467              		.thumb_func
 468              		.type	ADC_2_IsEndConversion, %function
 469              	ADC_2_IsEndConversion:
 470              	.LFB6:
 367:Generated_Source\PSoC5/ADC_2.c **** 
 368:Generated_Source\PSoC5/ADC_2.c **** 
 369:Generated_Source\PSoC5/ADC_2.c **** #if(ADC_2_DEFAULT_CONV_MODE != ADC_2__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_2.c **** 
 371:Generated_Source\PSoC5/ADC_2.c **** 
 372:Generated_Source\PSoC5/ADC_2.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_2.c ****     * Function Name: ADC_2_StartConvert
 374:Generated_Source\PSoC5/ADC_2.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_2.c ****     *
 376:Generated_Source\PSoC5/ADC_2.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_2.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_2.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_2.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_2.c ****     *  ADC_2_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_2.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_2.c ****     *
 383:Generated_Source\PSoC5/ADC_2.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_2.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_2.c ****     *
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 16


 386:Generated_Source\PSoC5/ADC_2.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_2.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_2.c ****     *
 389:Generated_Source\PSoC5/ADC_2.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_2.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_2.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_2.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_2.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_2.c ****     *
 395:Generated_Source\PSoC5/ADC_2.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_2.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_2.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_2.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_2.c ****     *
 400:Generated_Source\PSoC5/ADC_2.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_2.c ****     void ADC_2_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_2.c ****     {
 403:Generated_Source\PSoC5/ADC_2.c ****         #if(ADC_2_DEFAULT_CONV_MODE != ADC_2__FREE_RUNNING)  /* If software triggered mode */
 404:Generated_Source\PSoC5/ADC_2.c ****             ADC_2_SAR_CSR0_REG &= (uint8)~ADC_2_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_2.c ****         #endif /* End ADC_2_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_2.c **** 
 407:Generated_Source\PSoC5/ADC_2.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_SAR_CSR0_REG |= ADC_2_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/ADC_2.c ****     }
 410:Generated_Source\PSoC5/ADC_2.c **** 
 411:Generated_Source\PSoC5/ADC_2.c **** 
 412:Generated_Source\PSoC5/ADC_2.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_2.c ****     * Function Name: ADC_2_StopConvert
 414:Generated_Source\PSoC5/ADC_2.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_2.c ****     *
 416:Generated_Source\PSoC5/ADC_2.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_2.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_2.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_2.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_2.c ****     *
 421:Generated_Source\PSoC5/ADC_2.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_2.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_2.c ****     *
 424:Generated_Source\PSoC5/ADC_2.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_2.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_2.c ****     *
 427:Generated_Source\PSoC5/ADC_2.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_2.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_2.c ****     *
 430:Generated_Source\PSoC5/ADC_2.c ****     * Side Effects:
 431:Generated_Source\PSoC5/ADC_2.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_2.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_2.c ****     *
 434:Generated_Source\PSoC5/ADC_2.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_2.c ****     void ADC_2_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_2.c ****     {
 437:Generated_Source\PSoC5/ADC_2.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_SAR_CSR0_REG &= (uint8)~ADC_2_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/ADC_2.c **** 
 440:Generated_Source\PSoC5/ADC_2.c ****         #if(ADC_2_DEFAULT_CONV_MODE != ADC_2__FREE_RUNNING)  /* If software triggered mode */
 441:Generated_Source\PSoC5/ADC_2.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_2.c ****             ADC_2_SAR_CSR0_REG |= ADC_2_SAR_MX_SOF_UDB;    /* source: UDB */
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 17


 443:Generated_Source\PSoC5/ADC_2.c ****         #endif /* End ADC_2_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_2.c **** 
 445:Generated_Source\PSoC5/ADC_2.c ****     }
 446:Generated_Source\PSoC5/ADC_2.c **** 
 447:Generated_Source\PSoC5/ADC_2.c **** #endif /* End ADC_2_DEFAULT_CONV_MODE != ADC_2__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_2.c **** 
 449:Generated_Source\PSoC5/ADC_2.c **** 
 450:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_IsEndConversion
 452:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_2.c **** *
 454:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_2.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_2.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_2.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_2.c **** *
 459:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_2.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_2.c **** *   ADC_2_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_2.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_2.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_2.c **** *   ADC_2_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_2.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_2.c **** *
 467:Generated_Source\PSoC5/ADC_2.c **** * Return:
 468:Generated_Source\PSoC5/ADC_2.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_2.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_2.c **** *
 471:Generated_Source\PSoC5/ADC_2.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_2.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_2.c **** *
 474:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_2.c **** uint8 ADC_2_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_2.c **** {
 471              		.loc 1 476 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 16
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 0000 80B5     		push	{r7, lr}
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 0002 84B0     		sub	sp, sp, #16
 480              		.cfi_def_cfa_offset 24
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 0006 0346     		mov	r3, r0
 484 0008 FB71     		strb	r3, [r7, #7]
 485              	.L28:
 477:Generated_Source\PSoC5/ADC_2.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_2.c **** 
 479:Generated_Source\PSoC5/ADC_2.c ****     do
 480:Generated_Source\PSoC5/ADC_2.c ****     {
 481:Generated_Source\PSoC5/ADC_2.c ****         status = ADC_2_SAR_CSR1_REG & ADC_2_SAR_EOF_1;
 486              		.loc 1 481 0 discriminator 2
 487 000a 0C4B     		ldr	r3, .L31
 488 000c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 18


 489 000e DBB2     		uxtb	r3, r3
 490 0010 03F00103 		and	r3, r3, #1
 491 0014 FB73     		strb	r3, [r7, #15]
 482:Generated_Source\PSoC5/ADC_2.c ****     } while ((status != ADC_2_SAR_EOF_1) && (retMode == ADC_2_WAIT_FOR_RESULT));
 492              		.loc 1 482 0 discriminator 2
 493 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 494 0018 012B     		cmp	r3, #1
 495 001a 02D0     		beq	.L27
 496              		.loc 1 482 0 is_stmt 0 discriminator 1
 497 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 498 001e 002B     		cmp	r3, #0
 499 0020 F3D0     		beq	.L28
 500              	.L27:
 483:Generated_Source\PSoC5/ADC_2.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_2.c ****     if(status == ADC_2_SAR_EOF_1)
 501              		.loc 1 484 0 is_stmt 1
 502 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 503 0024 012B     		cmp	r3, #1
 504 0026 04D1     		bne	.L29
 485:Generated_Source\PSoC5/ADC_2.c ****     {
 486:Generated_Source\PSoC5/ADC_2.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_2.c ****         CyDelayUs(1u);
 505              		.loc 1 487 0
 506 0028 0120     		movs	r0, #1
 507 002a FFF7FEFF 		bl	CyDelayUs
 488:Generated_Source\PSoC5/ADC_2.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_2.c ****         CY_GET_REG8(ADC_2_SAR_CSR1_PTR);
 508              		.loc 1 489 0
 509 002e 034B     		ldr	r3, .L31
 510 0030 1B78     		ldrb	r3, [r3]
 511              	.L29:
 490:Generated_Source\PSoC5/ADC_2.c ****     }
 491:Generated_Source\PSoC5/ADC_2.c **** 
 492:Generated_Source\PSoC5/ADC_2.c ****     return(status);
 512              		.loc 1 492 0
 513 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:Generated_Source\PSoC5/ADC_2.c **** }
 514              		.loc 1 493 0
 515 0034 1846     		mov	r0, r3
 516 0036 1037     		adds	r7, r7, #16
 517              		.cfi_def_cfa_offset 8
 518 0038 BD46     		mov	sp, r7
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 003a 80BD     		pop	{r7, pc}
 522              	.L32:
 523              		.align	2
 524              	.L31:
 525 003c 01590040 		.word	1073764609
 526              		.cfi_endproc
 527              	.LFE6:
 528              		.size	ADC_2_IsEndConversion, .-ADC_2_IsEndConversion
 529              		.section	.text.ADC_2_GetResult8,"ax",%progbits
 530              		.align	2
 531              		.global	ADC_2_GetResult8
 532              		.thumb
 533              		.thumb_func
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 19


 534              		.type	ADC_2_GetResult8, %function
 535              	ADC_2_GetResult8:
 536              	.LFB7:
 494:Generated_Source\PSoC5/ADC_2.c **** 
 495:Generated_Source\PSoC5/ADC_2.c **** 
 496:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_GetResult8
 498:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_2.c **** *
 500:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_2.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_2.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_2.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_2.c **** *
 506:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_2.c **** *  None.
 508:Generated_Source\PSoC5/ADC_2.c **** *
 509:Generated_Source\PSoC5/ADC_2.c **** * Return:
 510:Generated_Source\PSoC5/ADC_2.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_2.c **** *
 512:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_2.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_2.c **** *
 516:Generated_Source\PSoC5/ADC_2.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_2.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_2.c **** *
 519:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_2.c **** int8 ADC_2_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_2.c **** {
 537              		.loc 1 521 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542 0000 80B4     		push	{r7}
 543              		.cfi_def_cfa_offset 4
 544              		.cfi_offset 7, -4
 545 0002 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 522:Generated_Source\PSoC5/ADC_2.c ****     return( (int8)ADC_2_SAR_WRK0_REG - (int8)ADC_2_shift);
 547              		.loc 1 522 0
 548 0004 064B     		ldr	r3, .L35
 549 0006 1B78     		ldrb	r3, [r3]
 550 0008 DAB2     		uxtb	r2, r3
 551 000a 064B     		ldr	r3, .L35+4
 552 000c 1B88     		ldrh	r3, [r3]	@ movhi
 553 000e 1BB2     		sxth	r3, r3
 554 0010 DBB2     		uxtb	r3, r3
 555 0012 D31A     		subs	r3, r2, r3
 556 0014 DBB2     		uxtb	r3, r3
 557 0016 5BB2     		sxtb	r3, r3
 523:Generated_Source\PSoC5/ADC_2.c **** }
 558              		.loc 1 523 0
 559 0018 1846     		mov	r0, r3
 560 001a BD46     		mov	sp, r7
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 20


 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 001c 80BC     		pop	{r7}
 564              		.cfi_restore 7
 565              		.cfi_def_cfa_offset 0
 566 001e 7047     		bx	lr
 567              	.L36:
 568              		.align	2
 569              	.L35:
 570 0020 A05B0040 		.word	1073765280
 571 0024 00000000 		.word	ADC_2_shift
 572              		.cfi_endproc
 573              	.LFE7:
 574              		.size	ADC_2_GetResult8, .-ADC_2_GetResult8
 575              		.section	.text.ADC_2_GetResult16,"ax",%progbits
 576              		.align	2
 577              		.global	ADC_2_GetResult16
 578              		.thumb
 579              		.thumb_func
 580              		.type	ADC_2_GetResult16, %function
 581              	ADC_2_GetResult16:
 582              	.LFB8:
 524:Generated_Source\PSoC5/ADC_2.c **** 
 525:Generated_Source\PSoC5/ADC_2.c **** 
 526:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_GetResult16
 528:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_2.c **** *
 530:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_2.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_2.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_2.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_2.c **** *
 536:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_2.c **** *  None.
 538:Generated_Source\PSoC5/ADC_2.c **** *
 539:Generated_Source\PSoC5/ADC_2.c **** * Return:
 540:Generated_Source\PSoC5/ADC_2.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_2.c **** *
 542:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_2.c **** *  compliment form.
 545:Generated_Source\PSoC5/ADC_2.c **** *
 546:Generated_Source\PSoC5/ADC_2.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_2.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_2.c **** *
 549:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_2.c **** int16 ADC_2_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_2.c **** {
 583              		.loc 1 551 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 8
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588 0000 80B4     		push	{r7}
 589              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 21


 590              		.cfi_offset 7, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              		.cfi_def_cfa_offset 16
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 552:Generated_Source\PSoC5/ADC_2.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_2.c **** 
 554:Generated_Source\PSoC5/ADC_2.c ****     res = CY_GET_REG16(ADC_2_SAR_WRK_PTR);
 595              		.loc 1 554 0
 596 0006 084B     		ldr	r3, .L39
 597 0008 1B88     		ldrh	r3, [r3]	@ movhi
 598 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:Generated_Source\PSoC5/ADC_2.c **** 
 556:Generated_Source\PSoC5/ADC_2.c ****     return( (int16)res - ADC_2_shift );
 599              		.loc 1 556 0
 600 000c 074B     		ldr	r3, .L39+4
 601 000e 1B88     		ldrh	r3, [r3]	@ movhi
 602 0010 1BB2     		sxth	r3, r3
 603 0012 9BB2     		uxth	r3, r3
 604 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 605 0016 D31A     		subs	r3, r2, r3
 606 0018 9BB2     		uxth	r3, r3
 607 001a 1BB2     		sxth	r3, r3
 557:Generated_Source\PSoC5/ADC_2.c **** }
 608              		.loc 1 557 0
 609 001c 1846     		mov	r0, r3
 610 001e 0C37     		adds	r7, r7, #12
 611              		.cfi_def_cfa_offset 4
 612 0020 BD46     		mov	sp, r7
 613              		.cfi_def_cfa_register 13
 614              		@ sp needed
 615 0022 80BC     		pop	{r7}
 616              		.cfi_restore 7
 617              		.cfi_def_cfa_offset 0
 618 0024 7047     		bx	lr
 619              	.L40:
 620 0026 00BF     		.align	2
 621              	.L39:
 622 0028 A05B0040 		.word	1073765280
 623 002c 00000000 		.word	ADC_2_shift
 624              		.cfi_endproc
 625              	.LFE8:
 626              		.size	ADC_2_GetResult16, .-ADC_2_GetResult16
 627              		.section	.text.ADC_2_SetOffset,"ax",%progbits
 628              		.align	2
 629              		.global	ADC_2_SetOffset
 630              		.thumb
 631              		.thumb_func
 632              		.type	ADC_2_SetOffset, %function
 633              	ADC_2_SetOffset:
 634              	.LFB9:
 558:Generated_Source\PSoC5/ADC_2.c **** 
 559:Generated_Source\PSoC5/ADC_2.c **** 
 560:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_SetOffset
 562:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_2.c **** *
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 22


 564:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_2.c **** *  Sets the ADC offset, which is used by ADC_2_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_CountsTo_mVolts(), and ADC_2_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_2.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_2.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_2.c **** *
 570:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_2.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_2.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_2.c **** *
 574:Generated_Source\PSoC5/ADC_2.c **** * Return:
 575:Generated_Source\PSoC5/ADC_2.c **** *  None.
 576:Generated_Source\PSoC5/ADC_2.c **** *
 577:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_2.c **** *  The ADC_2_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_2.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_2.c **** *  Affects the ADC_2_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_CountsTo_mVolts, ADC_2_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_2.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_2.c **** *
 584:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_2.c **** {
 635              		.loc 1 586 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 8
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640 0000 80B4     		push	{r7}
 641              		.cfi_def_cfa_offset 4
 642              		.cfi_offset 7, -4
 643 0002 83B0     		sub	sp, sp, #12
 644              		.cfi_def_cfa_offset 16
 645 0004 00AF     		add	r7, sp, #0
 646              		.cfi_def_cfa_register 7
 647 0006 0346     		mov	r3, r0
 648 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_offset = offset;
 649              		.loc 1 587 0
 650 000a 044A     		ldr	r2, .L42
 651 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 652 000e 1380     		strh	r3, [r2]	@ movhi
 588:Generated_Source\PSoC5/ADC_2.c **** }
 653              		.loc 1 588 0
 654 0010 00BF     		nop
 655 0012 0C37     		adds	r7, r7, #12
 656              		.cfi_def_cfa_offset 4
 657 0014 BD46     		mov	sp, r7
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 0016 80BC     		pop	{r7}
 661              		.cfi_restore 7
 662              		.cfi_def_cfa_offset 0
 663 0018 7047     		bx	lr
 664              	.L43:
 665 001a 00BF     		.align	2
 666              	.L42:
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 23


 667 001c 00000000 		.word	ADC_2_offset
 668              		.cfi_endproc
 669              	.LFE9:
 670              		.size	ADC_2_SetOffset, .-ADC_2_SetOffset
 671              		.section	.text.ADC_2_CalcGain,"ax",%progbits
 672              		.align	2
 673              		.thumb
 674              		.thumb_func
 675              		.type	ADC_2_CalcGain, %function
 676              	ADC_2_CalcGain:
 677              	.LFB10:
 589:Generated_Source\PSoC5/ADC_2.c **** 
 590:Generated_Source\PSoC5/ADC_2.c **** 
 591:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_CalcGain
 593:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_2.c **** *
 595:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_2.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_2.c **** *
 598:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_2.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_2.c **** *
 601:Generated_Source\PSoC5/ADC_2.c **** * Return:
 602:Generated_Source\PSoC5/ADC_2.c **** *  None.
 603:Generated_Source\PSoC5/ADC_2.c **** *
 604:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_2.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_2.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_2.c **** *
 610:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_2.c **** static void ADC_2_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_2.c **** {
 678              		.loc 1 612 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 16
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 84B0     		sub	sp, sp, #16
 687              		.cfi_def_cfa_offset 24
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 0346     		mov	r3, r0
 691 0008 FB71     		strb	r3, [r7, #7]
 613:Generated_Source\PSoC5/ADC_2.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_2.c ****     #if(!((ADC_2_DEFAULT_RANGE == ADC_2__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_2.c ****          (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_2.c ****          (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_2.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_2.c ****     #endif /* End ADC_2_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_2.c **** 
 620:Generated_Source\PSoC5/ADC_2.c ****     switch (resolution)
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 24


 692              		.loc 1 620 0
 693 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 694 000c 0A2B     		cmp	r3, #10
 695 000e 08D0     		beq	.L46
 696 0010 0C2B     		cmp	r3, #12
 697 0012 02D0     		beq	.L47
 698 0014 082B     		cmp	r3, #8
 699 0016 08D0     		beq	.L48
 700 0018 0BE0     		b	.L50
 701              	.L47:
 621:Generated_Source\PSoC5/ADC_2.c ****     {
 622:Generated_Source\PSoC5/ADC_2.c ****         case (uint8)ADC_2__BITS_12:
 623:Generated_Source\PSoC5/ADC_2.c ****             counts = (int32)ADC_2_SAR_WRK_MAX_12BIT;
 702              		.loc 1 623 0
 703 001a 4FF48053 		mov	r3, #4096
 704 001e FB60     		str	r3, [r7, #12]
 624:Generated_Source\PSoC5/ADC_2.c ****             #if(!((ADC_2_DEFAULT_RANGE == ADC_2__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_2.c ****                 diff_zero = ADC_2_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_2.c ****             #endif /* End ADC_2_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_2.c ****             break;
 705              		.loc 1 629 0
 706 0020 0DE0     		b	.L49
 707              	.L46:
 630:Generated_Source\PSoC5/ADC_2.c ****         case (uint8)ADC_2__BITS_10:
 631:Generated_Source\PSoC5/ADC_2.c ****             counts = (int32)ADC_2_SAR_WRK_MAX_10BIT;
 708              		.loc 1 631 0
 709 0022 4FF48063 		mov	r3, #1024
 710 0026 FB60     		str	r3, [r7, #12]
 632:Generated_Source\PSoC5/ADC_2.c ****             #if(!((ADC_2_DEFAULT_RANGE == ADC_2__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_2.c ****                 diff_zero = ADC_2_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/ADC_2.c ****             #endif /* End ADC_2_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_2.c ****             break;
 711              		.loc 1 637 0
 712 0028 09E0     		b	.L49
 713              	.L48:
 638:Generated_Source\PSoC5/ADC_2.c ****         case (uint8)ADC_2__BITS_8:
 639:Generated_Source\PSoC5/ADC_2.c ****             counts = (int32)ADC_2_SAR_WRK_MAX_8BIT;
 714              		.loc 1 639 0
 715 002a 4FF48073 		mov	r3, #256
 716 002e FB60     		str	r3, [r7, #12]
 640:Generated_Source\PSoC5/ADC_2.c ****             #if(!((ADC_2_DEFAULT_RANGE == ADC_2__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_2.c ****                 diff_zero = ADC_2_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_2.c ****             #endif /* End ADC_2_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_2.c ****             break;
 717              		.loc 1 645 0
 718 0030 05E0     		b	.L49
 719              	.L50:
 646:Generated_Source\PSoC5/ADC_2.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_2.c ****             counts = 0;
 720              		.loc 1 647 0
 721 0032 0023     		movs	r3, #0
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 25


 722 0034 FB60     		str	r3, [r7, #12]
 648:Generated_Source\PSoC5/ADC_2.c ****             #if(!((ADC_2_DEFAULT_RANGE == ADC_2__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_2.c ****                  (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_2.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_2.c ****             #endif /* End ADC_2_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_2.c ****             CYASSERT(0u != 0u);
 723              		.loc 1 653 0
 724 0036 0020     		movs	r0, #0
 725 0038 FFF7FEFF 		bl	CyHalt
 654:Generated_Source\PSoC5/ADC_2.c ****             break;
 726              		.loc 1 654 0
 727 003c 00BF     		nop
 728              	.L49:
 655:Generated_Source\PSoC5/ADC_2.c ****     }
 656:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_countsPerVolt = 0; /* Clear obsolete variable */
 729              		.loc 1 656 0
 730 003e 0C4B     		ldr	r3, .L51
 731 0040 0022     		movs	r2, #0
 732 0042 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_2.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_countsPer10Volt = (((counts * ADC_2_10MV_COUNTS) +
 733              		.loc 1 658 0
 734 0044 FB68     		ldr	r3, [r7, #12]
 735 0046 42F21072 		movw	r2, #10000
 736 004a 02FB03F3 		mul	r3, r2, r3
 737 004e 03F6C413 		addw	r3, r3, #2500
 659:Generated_Source\PSoC5/ADC_2.c ****                         ADC_2_DEFAULT_REF_VOLTAGE_MV) / (ADC_2_DEFAULT_REF_VOLTAGE_MV * 2));
 738              		.loc 1 659 0
 739 0052 084A     		ldr	r2, .L51+4
 740 0054 82FB0312 		smull	r1, r2, r2, r3
 741 0058 D212     		asrs	r2, r2, #11
 742 005a DB17     		asrs	r3, r3, #31
 743 005c D31A     		subs	r3, r2, r3
 658:Generated_Source\PSoC5/ADC_2.c ****                         ADC_2_DEFAULT_REF_VOLTAGE_MV) / (ADC_2_DEFAULT_REF_VOLTAGE_MV * 2));
 744              		.loc 1 658 0
 745 005e 064A     		ldr	r2, .L51+8
 746 0060 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_2.c **** 
 661:Generated_Source\PSoC5/ADC_2.c ****     #if( (ADC_2_DEFAULT_RANGE == ADC_2__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_2.c ****          (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_2.c ****          (ADC_2_DEFAULT_RANGE == ADC_2__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_shift = 0;
 747              		.loc 1 664 0
 748 0062 064B     		ldr	r3, .L51+12
 749 0064 0022     		movs	r2, #0
 750 0066 1A80     		strh	r2, [r3]	@ movhi
 665:Generated_Source\PSoC5/ADC_2.c ****     #else
 666:Generated_Source\PSoC5/ADC_2.c ****         ADC_2_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_2.c ****     #endif /* End ADC_2_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_2.c **** }
 751              		.loc 1 668 0
 752 0068 00BF     		nop
 753 006a 1037     		adds	r7, r7, #16
 754              		.cfi_def_cfa_offset 8
 755 006c BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 26


 757              		@ sp needed
 758 006e 80BD     		pop	{r7, pc}
 759              	.L52:
 760              		.align	2
 761              	.L51:
 762 0070 00000000 		.word	ADC_2_countsPerVolt
 763 0074 AD8BDB68 		.word	1759218605
 764 0078 00000000 		.word	ADC_2_countsPer10Volt
 765 007c 00000000 		.word	ADC_2_shift
 766              		.cfi_endproc
 767              	.LFE10:
 768              		.size	ADC_2_CalcGain, .-ADC_2_CalcGain
 769              		.section	.text.ADC_2_SetGain,"ax",%progbits
 770              		.align	2
 771              		.global	ADC_2_SetGain
 772              		.thumb
 773              		.thumb_func
 774              		.type	ADC_2_SetGain, %function
 775              	ADC_2_SetGain:
 776              	.LFB11:
 669:Generated_Source\PSoC5/ADC_2.c **** 
 670:Generated_Source\PSoC5/ADC_2.c **** 
 671:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_SetGain
 673:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_2.c **** *
 675:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_2.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_2.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_2.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_2.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_2.c **** *
 681:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_2.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_2.c **** *
 684:Generated_Source\PSoC5/ADC_2.c **** * Return:
 685:Generated_Source\PSoC5/ADC_2.c **** *  None.
 686:Generated_Source\PSoC5/ADC_2.c **** *
 687:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_2.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_2.c **** *
 691:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_2.c **** {
 777              		.loc 1 693 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782 0000 80B4     		push	{r7}
 783              		.cfi_def_cfa_offset 4
 784              		.cfi_offset 7, -4
 785 0002 83B0     		sub	sp, sp, #12
 786              		.cfi_def_cfa_offset 16
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 27


 789 0006 0346     		mov	r3, r0
 790 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_countsPer10Volt = (int32)adcGain * 10;
 791              		.loc 1 694 0
 792 000a B7F90620 		ldrsh	r2, [r7, #6]
 793 000e 1346     		mov	r3, r2
 794 0010 9B00     		lsls	r3, r3, #2
 795 0012 1344     		add	r3, r3, r2
 796 0014 5B00     		lsls	r3, r3, #1
 797 0016 1A46     		mov	r2, r3
 798 0018 034B     		ldr	r3, .L54
 799 001a 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC5/ADC_2.c **** }
 800              		.loc 1 695 0
 801 001c 00BF     		nop
 802 001e 0C37     		adds	r7, r7, #12
 803              		.cfi_def_cfa_offset 4
 804 0020 BD46     		mov	sp, r7
 805              		.cfi_def_cfa_register 13
 806              		@ sp needed
 807 0022 80BC     		pop	{r7}
 808              		.cfi_restore 7
 809              		.cfi_def_cfa_offset 0
 810 0024 7047     		bx	lr
 811              	.L55:
 812 0026 00BF     		.align	2
 813              	.L54:
 814 0028 00000000 		.word	ADC_2_countsPer10Volt
 815              		.cfi_endproc
 816              	.LFE11:
 817              		.size	ADC_2_SetGain, .-ADC_2_SetGain
 818              		.section	.text.ADC_2_SetScaledGain,"ax",%progbits
 819              		.align	2
 820              		.global	ADC_2_SetScaledGain
 821              		.thumb
 822              		.thumb_func
 823              		.type	ADC_2_SetScaledGain, %function
 824              	ADC_2_SetScaledGain:
 825              	.LFB12:
 696:Generated_Source\PSoC5/ADC_2.c **** 
 697:Generated_Source\PSoC5/ADC_2.c **** 
 698:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_SetScaledGain
 700:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_2.c **** *
 702:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_2.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_2.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_2.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_2.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_2.c **** *
 708:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_2.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_2.c **** *
 711:Generated_Source\PSoC5/ADC_2.c **** * Return:
 712:Generated_Source\PSoC5/ADC_2.c **** *  None.
 713:Generated_Source\PSoC5/ADC_2.c **** *
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 28


 714:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_2.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_2.c **** *
 718:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_2.c **** void ADC_2_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_2.c **** {
 826              		.loc 1 720 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 8
 829              		@ frame_needed = 1, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 831 0000 80B4     		push	{r7}
 832              		.cfi_def_cfa_offset 4
 833              		.cfi_offset 7, -4
 834 0002 83B0     		sub	sp, sp, #12
 835              		.cfi_def_cfa_offset 16
 836 0004 00AF     		add	r7, sp, #0
 837              		.cfi_def_cfa_register 7
 838 0006 7860     		str	r0, [r7, #4]
 721:Generated_Source\PSoC5/ADC_2.c ****     ADC_2_countsPer10Volt = adcGain;
 839              		.loc 1 721 0
 840 0008 034A     		ldr	r2, .L57
 841 000a 7B68     		ldr	r3, [r7, #4]
 842 000c 1360     		str	r3, [r2]
 722:Generated_Source\PSoC5/ADC_2.c **** }
 843              		.loc 1 722 0
 844 000e 00BF     		nop
 845 0010 0C37     		adds	r7, r7, #12
 846              		.cfi_def_cfa_offset 4
 847 0012 BD46     		mov	sp, r7
 848              		.cfi_def_cfa_register 13
 849              		@ sp needed
 850 0014 80BC     		pop	{r7}
 851              		.cfi_restore 7
 852              		.cfi_def_cfa_offset 0
 853 0016 7047     		bx	lr
 854              	.L58:
 855              		.align	2
 856              	.L57:
 857 0018 00000000 		.word	ADC_2_countsPer10Volt
 858              		.cfi_endproc
 859              	.LFE12:
 860              		.size	ADC_2_SetScaledGain, .-ADC_2_SetScaledGain
 861              		.section	.text.ADC_2_CountsTo_mVolts,"ax",%progbits
 862              		.align	2
 863              		.global	ADC_2_CountsTo_mVolts
 864              		.thumb
 865              		.thumb_func
 866              		.type	ADC_2_CountsTo_mVolts, %function
 867              	ADC_2_CountsTo_mVolts:
 868              	.LFB13:
 723:Generated_Source\PSoC5/ADC_2.c **** 
 724:Generated_Source\PSoC5/ADC_2.c **** 
 725:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 29


 728:Generated_Source\PSoC5/ADC_2.c **** *
 729:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_2.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_2.c **** *
 732:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_2.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_2.c **** *
 735:Generated_Source\PSoC5/ADC_2.c **** * Return:
 736:Generated_Source\PSoC5/ADC_2.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_2.c **** *
 738:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_offset variable used.
 740:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_2.c **** *
 742:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_2.c **** int16 ADC_2_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_2.c **** {
 869              		.loc 1 744 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 16
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874 0000 80B4     		push	{r7}
 875              		.cfi_def_cfa_offset 4
 876              		.cfi_offset 7, -4
 877 0002 85B0     		sub	sp, sp, #20
 878              		.cfi_def_cfa_offset 24
 879 0004 00AF     		add	r7, sp, #0
 880              		.cfi_def_cfa_register 7
 881 0006 0346     		mov	r3, r0
 882 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:Generated_Source\PSoC5/ADC_2.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_2.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_2.c **** 
 748:Generated_Source\PSoC5/ADC_2.c ****     if(ADC_2_countsPerVolt != 0)
 883              		.loc 1 748 0
 884 000a 1D4B     		ldr	r3, .L65
 885 000c 1B88     		ldrh	r3, [r3]	@ movhi
 886 000e 1BB2     		sxth	r3, r3
 887 0010 002B     		cmp	r3, #0
 888 0012 09D0     		beq	.L60
 749:Generated_Source\PSoC5/ADC_2.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_2.c ****         countsPer10Volt = (int32)ADC_2_countsPerVolt * 10;
 889              		.loc 1 750 0
 890 0014 1A4B     		ldr	r3, .L65
 891 0016 1B88     		ldrh	r3, [r3]	@ movhi
 892 0018 1BB2     		sxth	r3, r3
 893 001a 1A46     		mov	r2, r3
 894 001c 1346     		mov	r3, r2
 895 001e 9B00     		lsls	r3, r3, #2
 896 0020 1344     		add	r3, r3, r2
 897 0022 5B00     		lsls	r3, r3, #1
 898 0024 FB60     		str	r3, [r7, #12]
 899 0026 02E0     		b	.L61
 900              	.L60:
 751:Generated_Source\PSoC5/ADC_2.c ****     }
 752:Generated_Source\PSoC5/ADC_2.c ****     else
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 30


 753:Generated_Source\PSoC5/ADC_2.c ****     {
 754:Generated_Source\PSoC5/ADC_2.c ****         countsPer10Volt = ADC_2_countsPer10Volt;
 901              		.loc 1 754 0
 902 0028 164B     		ldr	r3, .L65+4
 903 002a 1B68     		ldr	r3, [r3]
 904 002c FB60     		str	r3, [r7, #12]
 905              	.L61:
 755:Generated_Source\PSoC5/ADC_2.c ****     }
 756:Generated_Source\PSoC5/ADC_2.c **** 
 757:Generated_Source\PSoC5/ADC_2.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_2.c ****     adcCounts -= ADC_2_offset;
 906              		.loc 1 758 0
 907 002e 164B     		ldr	r3, .L65+8
 908 0030 1B88     		ldrh	r3, [r3]	@ movhi
 909 0032 1BB2     		sxth	r3, r3
 910 0034 FA88     		ldrh	r2, [r7, #6]
 911 0036 9BB2     		uxth	r3, r3
 912 0038 D31A     		subs	r3, r2, r3
 913 003a 9BB2     		uxth	r3, r3
 914 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:Generated_Source\PSoC5/ADC_2.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_2.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_2_10MV_COUNTS ) + ( (adcCounts > 0) ?
 915              		.loc 1 760 0
 916 003e B7F90630 		ldrsh	r3, [r7, #6]
 917 0042 42F21072 		movw	r2, #10000
 918 0046 02FB03F2 		mul	r2, r2, r3
 761:Generated_Source\PSoC5/ADC_2.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 919              		.loc 1 761 0
 920 004a B7F90630 		ldrsh	r3, [r7, #6]
 921 004e 002B     		cmp	r3, #0
 922 0050 04DD     		ble	.L62
 923              		.loc 1 761 0 is_stmt 0 discriminator 1
 924 0052 FB68     		ldr	r3, [r7, #12]
 925 0054 D90F     		lsrs	r1, r3, #31
 926 0056 0B44     		add	r3, r3, r1
 927 0058 5B10     		asrs	r3, r3, #1
 928 005a 04E0     		b	.L63
 929              	.L62:
 930              		.loc 1 761 0 discriminator 2
 931 005c FB68     		ldr	r3, [r7, #12]
 932 005e D90F     		lsrs	r1, r3, #31
 933 0060 0B44     		add	r3, r3, r1
 934 0062 5B10     		asrs	r3, r3, #1
 935 0064 5B42     		negs	r3, r3
 936              	.L63:
 760:Generated_Source\PSoC5/ADC_2.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 937              		.loc 1 760 0 is_stmt 1
 938 0066 1A44     		add	r2, r2, r3
 939              		.loc 1 761 0
 940 0068 FB68     		ldr	r3, [r7, #12]
 941 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:Generated_Source\PSoC5/ADC_2.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 942              		.loc 1 760 0
 943 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:Generated_Source\PSoC5/ADC_2.c **** 
 763:Generated_Source\PSoC5/ADC_2.c ****     return( mVolts );
 944              		.loc 1 763 0
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 31


 945 0070 B7F90A30 		ldrsh	r3, [r7, #10]
 764:Generated_Source\PSoC5/ADC_2.c **** }
 946              		.loc 1 764 0
 947 0074 1846     		mov	r0, r3
 948 0076 1437     		adds	r7, r7, #20
 949              		.cfi_def_cfa_offset 4
 950 0078 BD46     		mov	sp, r7
 951              		.cfi_def_cfa_register 13
 952              		@ sp needed
 953 007a 80BC     		pop	{r7}
 954              		.cfi_restore 7
 955              		.cfi_def_cfa_offset 0
 956 007c 7047     		bx	lr
 957              	.L66:
 958 007e 00BF     		.align	2
 959              	.L65:
 960 0080 00000000 		.word	ADC_2_countsPerVolt
 961 0084 00000000 		.word	ADC_2_countsPer10Volt
 962 0088 00000000 		.word	ADC_2_offset
 963              		.cfi_endproc
 964              	.LFE13:
 965              		.size	ADC_2_CountsTo_mVolts, .-ADC_2_CountsTo_mVolts
 966              		.global	__aeabi_ldivmod
 967              		.section	.text.ADC_2_CountsTo_uVolts,"ax",%progbits
 968              		.align	2
 969              		.global	ADC_2_CountsTo_uVolts
 970              		.thumb
 971              		.thumb_func
 972              		.type	ADC_2_CountsTo_uVolts, %function
 973              	ADC_2_CountsTo_uVolts:
 974              	.LFB14:
 765:Generated_Source\PSoC5/ADC_2.c **** 
 766:Generated_Source\PSoC5/ADC_2.c **** 
 767:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_2.c **** *
 771:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_2.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_2.c **** *
 774:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_2.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_2.c **** *
 777:Generated_Source\PSoC5/ADC_2.c **** * Return:
 778:Generated_Source\PSoC5/ADC_2.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_2.c **** *
 780:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_offset variable used.
 782:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_2.c **** *
 784:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_2.c **** int32 ADC_2_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_2.c **** {
 975              		.loc 1 786 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 24
 978              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 32


 979 0000 90B5     		push	{r4, r7, lr}
 980              		.cfi_def_cfa_offset 12
 981              		.cfi_offset 4, -12
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 87B0     		sub	sp, sp, #28
 985              		.cfi_def_cfa_offset 40
 986 0004 00AF     		add	r7, sp, #0
 987              		.cfi_def_cfa_register 7
 988 0006 0346     		mov	r3, r0
 989 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:Generated_Source\PSoC5/ADC_2.c **** 
 788:Generated_Source\PSoC5/ADC_2.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_2.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_2.c **** 
 791:Generated_Source\PSoC5/ADC_2.c ****     if(ADC_2_countsPerVolt != 0)
 990              		.loc 1 791 0
 991 000a 1D4B     		ldr	r3, .L71
 992 000c 1B88     		ldrh	r3, [r3]	@ movhi
 993 000e 1BB2     		sxth	r3, r3
 994 0010 002B     		cmp	r3, #0
 995 0012 09D0     		beq	.L68
 792:Generated_Source\PSoC5/ADC_2.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_2.c ****         countsPer10Volt = (int32)ADC_2_countsPerVolt * 10;
 996              		.loc 1 793 0
 997 0014 1A4B     		ldr	r3, .L71
 998 0016 1B88     		ldrh	r3, [r3]	@ movhi
 999 0018 1BB2     		sxth	r3, r3
 1000 001a 1A46     		mov	r2, r3
 1001 001c 1346     		mov	r3, r2
 1002 001e 9B00     		lsls	r3, r3, #2
 1003 0020 1344     		add	r3, r3, r2
 1004 0022 5B00     		lsls	r3, r3, #1
 1005 0024 7B61     		str	r3, [r7, #20]
 1006 0026 02E0     		b	.L69
 1007              	.L68:
 794:Generated_Source\PSoC5/ADC_2.c ****     }
 795:Generated_Source\PSoC5/ADC_2.c ****     else
 796:Generated_Source\PSoC5/ADC_2.c ****     {
 797:Generated_Source\PSoC5/ADC_2.c ****         countsPer10Volt = ADC_2_countsPer10Volt;
 1008              		.loc 1 797 0
 1009 0028 164B     		ldr	r3, .L71+4
 1010 002a 1B68     		ldr	r3, [r3]
 1011 002c 7B61     		str	r3, [r7, #20]
 1012              	.L69:
 798:Generated_Source\PSoC5/ADC_2.c ****     }
 799:Generated_Source\PSoC5/ADC_2.c **** 
 800:Generated_Source\PSoC5/ADC_2.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_2.c ****     adcCounts -= ADC_2_offset;
 1013              		.loc 1 801 0
 1014 002e 164B     		ldr	r3, .L71+8
 1015 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1016 0032 1BB2     		sxth	r3, r3
 1017 0034 FA88     		ldrh	r2, [r7, #6]
 1018 0036 9BB2     		uxth	r3, r3
 1019 0038 D31A     		subs	r3, r2, r3
 1020 003a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 33


 1021 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:Generated_Source\PSoC5/ADC_2.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_2.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_2.c ****     */
 805:Generated_Source\PSoC5/ADC_2.c ****     uVolts = (( (int64)adcCounts * ADC_2_10UV_COUNTS ) / countsPer10Volt);
 1022              		.loc 1 805 0
 1023 003e B7F90630 		ldrsh	r3, [r7, #6]
 1024 0042 4FEAE374 		asr	r4, r3, #31
 1025 0046 114A     		ldr	r2, .L71+12
 1026 0048 02FB04F1 		mul	r1, r2, r4
 1027 004c 0022     		movs	r2, #0
 1028 004e 02FB03F2 		mul	r2, r2, r3
 1029 0052 0A44     		add	r2, r2, r1
 1030 0054 0D49     		ldr	r1, .L71+12
 1031 0056 A3FB0101 		umull	r0, r1, r3, r1
 1032 005a 5318     		adds	r3, r2, r1
 1033 005c 1946     		mov	r1, r3
 1034 005e 7B69     		ldr	r3, [r7, #20]
 1035 0060 4FEAE374 		asr	r4, r3, #31
 1036 0064 1A46     		mov	r2, r3
 1037 0066 2346     		mov	r3, r4
 1038 0068 FFF7FEFF 		bl	__aeabi_ldivmod
 1039 006c 0346     		mov	r3, r0
 1040 006e 0C46     		mov	r4, r1
 1041 0070 C7E90234 		strd	r3, [r7, #8]
 806:Generated_Source\PSoC5/ADC_2.c **** 
 807:Generated_Source\PSoC5/ADC_2.c ****     return((int32) uVolts );
 1042              		.loc 1 807 0
 1043 0074 BB68     		ldr	r3, [r7, #8]
 808:Generated_Source\PSoC5/ADC_2.c **** }
 1044              		.loc 1 808 0
 1045 0076 1846     		mov	r0, r3
 1046 0078 1C37     		adds	r7, r7, #28
 1047              		.cfi_def_cfa_offset 12
 1048 007a BD46     		mov	sp, r7
 1049              		.cfi_def_cfa_register 13
 1050              		@ sp needed
 1051 007c 90BD     		pop	{r4, r7, pc}
 1052              	.L72:
 1053 007e 00BF     		.align	2
 1054              	.L71:
 1055 0080 00000000 		.word	ADC_2_countsPerVolt
 1056 0084 00000000 		.word	ADC_2_countsPer10Volt
 1057 0088 00000000 		.word	ADC_2_offset
 1058 008c 80969800 		.word	10000000
 1059              		.cfi_endproc
 1060              	.LFE14:
 1061              		.size	ADC_2_CountsTo_uVolts, .-ADC_2_CountsTo_uVolts
 1062              		.global	__aeabi_i2f
 1063              		.global	__aeabi_fmul
 1064              		.global	__aeabi_fdiv
 1065              		.section	.text.ADC_2_CountsTo_Volts,"ax",%progbits
 1066              		.align	2
 1067              		.global	ADC_2_CountsTo_Volts
 1068              		.thumb
 1069              		.thumb_func
 1070              		.type	ADC_2_CountsTo_Volts, %function
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 34


 1071              	ADC_2_CountsTo_Volts:
 1072              	.LFB15:
 809:Generated_Source\PSoC5/ADC_2.c **** 
 810:Generated_Source\PSoC5/ADC_2.c **** 
 811:Generated_Source\PSoC5/ADC_2.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_2.c **** * Function Name: ADC_2_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_2.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_2.c **** *
 815:Generated_Source\PSoC5/ADC_2.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_2.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_2.c **** *
 818:Generated_Source\PSoC5/ADC_2.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_2.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_2.c **** *
 821:Generated_Source\PSoC5/ADC_2.c **** * Return:
 822:Generated_Source\PSoC5/ADC_2.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_2.c **** *
 824:Generated_Source\PSoC5/ADC_2.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_offset variable used.
 826:Generated_Source\PSoC5/ADC_2.c **** *  ADC_2_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_2.c **** *
 828:Generated_Source\PSoC5/ADC_2.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_2.c **** float32 ADC_2_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_2.c **** {
 1073              		.loc 1 830 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 16
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0000 90B5     		push	{r4, r7, lr}
 1078              		.cfi_def_cfa_offset 12
 1079              		.cfi_offset 4, -12
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 85B0     		sub	sp, sp, #20
 1083              		.cfi_def_cfa_offset 32
 1084 0004 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
 1086 0006 0346     		mov	r3, r0
 1087 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:Generated_Source\PSoC5/ADC_2.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_2.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_2.c **** 
 834:Generated_Source\PSoC5/ADC_2.c ****     if(ADC_2_countsPerVolt != 0)
 1088              		.loc 1 834 0
 1089 000a 1A4B     		ldr	r3, .L77
 1090 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1091 000e 1BB2     		sxth	r3, r3
 1092 0010 002B     		cmp	r3, #0
 1093 0012 09D0     		beq	.L74
 835:Generated_Source\PSoC5/ADC_2.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_2.c ****         countsPer10Volt = (int32)ADC_2_countsPerVolt * 10;
 1094              		.loc 1 836 0
 1095 0014 174B     		ldr	r3, .L77
 1096 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1097 0018 1BB2     		sxth	r3, r3
 1098 001a 1A46     		mov	r2, r3
 1099 001c 1346     		mov	r3, r2
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 35


 1100 001e 9B00     		lsls	r3, r3, #2
 1101 0020 1344     		add	r3, r3, r2
 1102 0022 5B00     		lsls	r3, r3, #1
 1103 0024 FB60     		str	r3, [r7, #12]
 1104 0026 02E0     		b	.L75
 1105              	.L74:
 837:Generated_Source\PSoC5/ADC_2.c ****     }
 838:Generated_Source\PSoC5/ADC_2.c ****     else
 839:Generated_Source\PSoC5/ADC_2.c ****     {
 840:Generated_Source\PSoC5/ADC_2.c ****         countsPer10Volt = ADC_2_countsPer10Volt;
 1106              		.loc 1 840 0
 1107 0028 134B     		ldr	r3, .L77+4
 1108 002a 1B68     		ldr	r3, [r3]
 1109 002c FB60     		str	r3, [r7, #12]
 1110              	.L75:
 841:Generated_Source\PSoC5/ADC_2.c ****     }
 842:Generated_Source\PSoC5/ADC_2.c **** 
 843:Generated_Source\PSoC5/ADC_2.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_2.c ****     adcCounts -= ADC_2_offset;
 1111              		.loc 1 844 0
 1112 002e 134B     		ldr	r3, .L77+8
 1113 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1114 0032 1BB2     		sxth	r3, r3
 1115 0034 FA88     		ldrh	r2, [r7, #6]
 1116 0036 9BB2     		uxth	r3, r3
 1117 0038 D31A     		subs	r3, r2, r3
 1118 003a 9BB2     		uxth	r3, r3
 1119 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:Generated_Source\PSoC5/ADC_2.c **** 
 846:Generated_Source\PSoC5/ADC_2.c ****     volts = ((float32)adcCounts * ADC_2_10V_COUNTS) / (float32)countsPer10Volt;
 1120              		.loc 1 846 0
 1121 003e B7F90630 		ldrsh	r3, [r7, #6]
 1122 0042 1846     		mov	r0, r3
 1123 0044 FFF7FEFF 		bl	__aeabi_i2f
 1124 0048 0346     		mov	r3, r0
 1125 004a 0D49     		ldr	r1, .L77+12
 1126 004c 1846     		mov	r0, r3
 1127 004e FFF7FEFF 		bl	__aeabi_fmul
 1128 0052 0346     		mov	r3, r0
 1129 0054 1C46     		mov	r4, r3
 1130 0056 F868     		ldr	r0, [r7, #12]
 1131 0058 FFF7FEFF 		bl	__aeabi_i2f
 1132 005c 0346     		mov	r3, r0
 1133 005e 1946     		mov	r1, r3
 1134 0060 2046     		mov	r0, r4
 1135 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1136 0066 0346     		mov	r3, r0
 1137 0068 BB60     		str	r3, [r7, #8]	@ float
 847:Generated_Source\PSoC5/ADC_2.c **** 
 848:Generated_Source\PSoC5/ADC_2.c ****     return( volts );
 1138              		.loc 1 848 0
 1139 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:Generated_Source\PSoC5/ADC_2.c **** }
 1140              		.loc 1 849 0
 1141 006c 1846     		mov	r0, r3
 1142 006e 1437     		adds	r7, r7, #20
 1143              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 36


 1144 0070 BD46     		mov	sp, r7
 1145              		.cfi_def_cfa_register 13
 1146              		@ sp needed
 1147 0072 90BD     		pop	{r4, r7, pc}
 1148              	.L78:
 1149              		.align	2
 1150              	.L77:
 1151 0074 00000000 		.word	ADC_2_countsPerVolt
 1152 0078 00000000 		.word	ADC_2_countsPer10Volt
 1153 007c 00000000 		.word	ADC_2_offset
 1154 0080 00002041 		.word	1092616192
 1155              		.cfi_endproc
 1156              	.LFE15:
 1157              		.size	ADC_2_CountsTo_Volts, .-ADC_2_CountsTo_Volts
 1158              		.text
 1159              	.Letext0:
 1160              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1161              		.section	.debug_info,"",%progbits
 1162              	.Ldebug_info0:
 1163 0000 57040000 		.4byte	0x457
 1164 0004 0400     		.2byte	0x4
 1165 0006 00000000 		.4byte	.Ldebug_abbrev0
 1166 000a 04       		.byte	0x4
 1167 000b 01       		.uleb128 0x1
 1168 000c 28000000 		.4byte	.LASF58
 1169 0010 0C       		.byte	0xc
 1170 0011 C5020000 		.4byte	.LASF59
 1171 0015 CD000000 		.4byte	.LASF60
 1172 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1173 001d 00000000 		.4byte	0
 1174 0021 00000000 		.4byte	.Ldebug_line0
 1175 0025 02       		.uleb128 0x2
 1176 0026 04       		.byte	0x4
 1177 0027 05       		.byte	0x5
 1178 0028 696E7400 		.ascii	"int\000"
 1179 002c 03       		.uleb128 0x3
 1180 002d 04       		.byte	0x4
 1181 002e 07       		.byte	0x7
 1182 002f EB010000 		.4byte	.LASF0
 1183 0033 03       		.uleb128 0x3
 1184 0034 08       		.byte	0x8
 1185 0035 05       		.byte	0x5
 1186 0036 24010000 		.4byte	.LASF1
 1187 003a 03       		.uleb128 0x3
 1188 003b 08       		.byte	0x8
 1189 003c 04       		.byte	0x4
 1190 003d 7B020000 		.4byte	.LASF2
 1191 0041 03       		.uleb128 0x3
 1192 0042 01       		.byte	0x1
 1193 0043 06       		.byte	0x6
 1194 0044 32010000 		.4byte	.LASF3
 1195 0048 03       		.uleb128 0x3
 1196 0049 01       		.byte	0x1
 1197 004a 08       		.byte	0x8
 1198 004b 05030000 		.4byte	.LASF4
 1199 004f 03       		.uleb128 0x3
 1200 0050 02       		.byte	0x2
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 37


 1201 0051 05       		.byte	0x5
 1202 0052 27030000 		.4byte	.LASF5
 1203 0056 03       		.uleb128 0x3
 1204 0057 02       		.byte	0x2
 1205 0058 07       		.byte	0x7
 1206 0059 37020000 		.4byte	.LASF6
 1207 005d 03       		.uleb128 0x3
 1208 005e 04       		.byte	0x4
 1209 005f 05       		.byte	0x5
 1210 0060 73010000 		.4byte	.LASF7
 1211 0064 03       		.uleb128 0x3
 1212 0065 04       		.byte	0x4
 1213 0066 07       		.byte	0x7
 1214 0067 FF010000 		.4byte	.LASF8
 1215 006b 03       		.uleb128 0x3
 1216 006c 08       		.byte	0x8
 1217 006d 07       		.byte	0x7
 1218 006e B6000000 		.4byte	.LASF9
 1219 0072 03       		.uleb128 0x3
 1220 0073 04       		.byte	0x4
 1221 0074 07       		.byte	0x7
 1222 0075 72020000 		.4byte	.LASF10
 1223 0079 03       		.uleb128 0x3
 1224 007a 01       		.byte	0x1
 1225 007b 08       		.byte	0x8
 1226 007c 5D030000 		.4byte	.LASF11
 1227 0080 04       		.uleb128 0x4
 1228 0081 82010000 		.4byte	.LASF12
 1229 0085 02       		.byte	0x2
 1230 0086 E901     		.2byte	0x1e9
 1231 0088 48000000 		.4byte	0x48
 1232 008c 04       		.uleb128 0x4
 1233 008d 00000000 		.4byte	.LASF13
 1234 0091 02       		.byte	0x2
 1235 0092 EA01     		.2byte	0x1ea
 1236 0094 56000000 		.4byte	0x56
 1237 0098 04       		.uleb128 0x4
 1238 0099 8F010000 		.4byte	.LASF14
 1239 009d 02       		.byte	0x2
 1240 009e EB01     		.2byte	0x1eb
 1241 00a0 64000000 		.4byte	0x64
 1242 00a4 04       		.uleb128 0x4
 1243 00a5 4A020000 		.4byte	.LASF15
 1244 00a9 02       		.byte	0x2
 1245 00aa EC01     		.2byte	0x1ec
 1246 00ac 41000000 		.4byte	0x41
 1247 00b0 04       		.uleb128 0x4
 1248 00b1 AA030000 		.4byte	.LASF16
 1249 00b5 02       		.byte	0x2
 1250 00b6 ED01     		.2byte	0x1ed
 1251 00b8 4F000000 		.4byte	0x4f
 1252 00bc 04       		.uleb128 0x4
 1253 00bd 4A010000 		.4byte	.LASF17
 1254 00c1 02       		.byte	0x2
 1255 00c2 EE01     		.2byte	0x1ee
 1256 00c4 5D000000 		.4byte	0x5d
 1257 00c8 04       		.uleb128 0x4
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 38


 1258 00c9 6A020000 		.4byte	.LASF18
 1259 00cd 02       		.byte	0x2
 1260 00ce EF01     		.2byte	0x1ef
 1261 00d0 D4000000 		.4byte	0xd4
 1262 00d4 03       		.uleb128 0x3
 1263 00d5 04       		.byte	0x4
 1264 00d6 04       		.byte	0x4
 1265 00d7 BF020000 		.4byte	.LASF19
 1266 00db 03       		.uleb128 0x3
 1267 00dc 08       		.byte	0x8
 1268 00dd 04       		.byte	0x4
 1269 00de 88010000 		.4byte	.LASF20
 1270 00e2 04       		.uleb128 0x4
 1271 00e3 AD020000 		.4byte	.LASF21
 1272 00e7 02       		.byte	0x2
 1273 00e8 F401     		.2byte	0x1f4
 1274 00ea 33000000 		.4byte	0x33
 1275 00ee 04       		.uleb128 0x4
 1276 00ef EA020000 		.4byte	.LASF22
 1277 00f3 02       		.byte	0x2
 1278 00f4 9302     		.2byte	0x293
 1279 00f6 FA000000 		.4byte	0xfa
 1280 00fa 05       		.uleb128 0x5
 1281 00fb 80000000 		.4byte	0x80
 1282 00ff 04       		.uleb128 0x4
 1283 0100 7C010000 		.4byte	.LASF23
 1284 0104 02       		.byte	0x2
 1285 0105 9402     		.2byte	0x294
 1286 0107 0B010000 		.4byte	0x10b
 1287 010b 05       		.uleb128 0x5
 1288 010c 8C000000 		.4byte	0x8c
 1289 0110 04       		.uleb128 0x4
 1290 0111 64020000 		.4byte	.LASF24
 1291 0115 02       		.byte	0x2
 1292 0116 9502     		.2byte	0x295
 1293 0118 1C010000 		.4byte	0x11c
 1294 011c 05       		.uleb128 0x5
 1295 011d 98000000 		.4byte	0x98
 1296 0121 06       		.uleb128 0x6
 1297 0122 3E010000 		.4byte	.LASF25
 1298 0126 01       		.byte	0x1
 1299 0127 4A       		.byte	0x4a
 1300 0128 00000000 		.4byte	.LFB0
 1301 012c 24000000 		.4byte	.LFE0-.LFB0
 1302 0130 01       		.uleb128 0x1
 1303 0131 9C       		.byte	0x9c
 1304 0132 06       		.uleb128 0x6
 1305 0133 39030000 		.4byte	.LASF26
 1306 0137 01       		.byte	0x1
 1307 0138 6A       		.byte	0x6a
 1308 0139 00000000 		.4byte	.LFB1
 1309 013d 40000000 		.4byte	.LFE1-.LFB1
 1310 0141 01       		.uleb128 0x1
 1311 0142 9C       		.byte	0x9c
 1312 0143 07       		.uleb128 0x7
 1313 0144 69030000 		.4byte	.LASF29
 1314 0148 01       		.byte	0x1
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 39


 1315 0149 8F       		.byte	0x8f
 1316 014a 00000000 		.4byte	.LFB2
 1317 014e CC000000 		.4byte	.LFE2-.LFB2
 1318 0152 01       		.uleb128 0x1
 1319 0153 9C       		.byte	0x9c
 1320 0154 75010000 		.4byte	0x175
 1321 0158 08       		.uleb128 0x8
 1322 0159 C6030000 		.4byte	.LASF27
 1323 015d 01       		.byte	0x1
 1324 015e 91       		.byte	0x91
 1325 015f 80000000 		.4byte	0x80
 1326 0163 02       		.uleb128 0x2
 1327 0164 91       		.byte	0x91
 1328 0165 76       		.sleb128 -10
 1329 0166 08       		.uleb128 0x8
 1330 0167 80030000 		.4byte	.LASF28
 1331 016b 01       		.byte	0x1
 1332 016c 92       		.byte	0x92
 1333 016d 80000000 		.4byte	0x80
 1334 0171 02       		.uleb128 0x2
 1335 0172 91       		.byte	0x91
 1336 0173 77       		.sleb128 -9
 1337 0174 00       		.byte	0
 1338 0175 07       		.uleb128 0x7
 1339 0176 A6010000 		.4byte	.LASF30
 1340 017a 01       		.byte	0x1
 1341 017b F8       		.byte	0xf8
 1342 017c 00000000 		.4byte	.LFB3
 1343 0180 5C000000 		.4byte	.LFE3-.LFB3
 1344 0184 01       		.uleb128 0x1
 1345 0185 9C       		.byte	0x9c
 1346 0186 99010000 		.4byte	0x199
 1347 018a 08       		.uleb128 0x8
 1348 018b 80030000 		.4byte	.LASF28
 1349 018f 01       		.byte	0x1
 1350 0190 FA       		.byte	0xfa
 1351 0191 80000000 		.4byte	0x80
 1352 0195 02       		.uleb128 0x2
 1353 0196 91       		.byte	0x91
 1354 0197 77       		.sleb128 -9
 1355 0198 00       		.byte	0
 1356 0199 09       		.uleb128 0x9
 1357 019a 64010000 		.4byte	.LASF31
 1358 019e 01       		.byte	0x1
 1359 019f 2201     		.2byte	0x122
 1360 01a1 00000000 		.4byte	.LFB4
 1361 01a5 40000000 		.4byte	.LFE4-.LFB4
 1362 01a9 01       		.uleb128 0x1
 1363 01aa 9C       		.byte	0x9c
 1364 01ab CE010000 		.4byte	0x1ce
 1365 01af 0A       		.uleb128 0xa
 1366 01b0 E4020000 		.4byte	.LASF33
 1367 01b4 01       		.byte	0x1
 1368 01b5 2201     		.2byte	0x122
 1369 01b7 80000000 		.4byte	0x80
 1370 01bb 02       		.uleb128 0x2
 1371 01bc 91       		.byte	0x91
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 40


 1372 01bd 6F       		.sleb128 -17
 1373 01be 0B       		.uleb128 0xb
 1374 01bf C6030000 		.4byte	.LASF27
 1375 01c3 01       		.byte	0x1
 1376 01c4 2401     		.2byte	0x124
 1377 01c6 80000000 		.4byte	0x80
 1378 01ca 02       		.uleb128 0x2
 1379 01cb 91       		.byte	0x91
 1380 01cc 77       		.sleb128 -9
 1381 01cd 00       		.byte	0
 1382 01ce 0C       		.uleb128 0xc
 1383 01cf 07000000 		.4byte	.LASF32
 1384 01d3 01       		.byte	0x1
 1385 01d4 5401     		.2byte	0x154
 1386 01d6 00000000 		.4byte	.LFB5
 1387 01da 54000000 		.4byte	.LFE5-.LFB5
 1388 01de 01       		.uleb128 0x1
 1389 01df 9C       		.byte	0x9c
 1390 01e0 03020000 		.4byte	0x203
 1391 01e4 0A       		.uleb128 0xa
 1392 01e5 52030000 		.4byte	.LASF34
 1393 01e9 01       		.byte	0x1
 1394 01ea 5401     		.2byte	0x154
 1395 01ec 80000000 		.4byte	0x80
 1396 01f0 02       		.uleb128 0x2
 1397 01f1 91       		.byte	0x91
 1398 01f2 6F       		.sleb128 -17
 1399 01f3 0B       		.uleb128 0xb
 1400 01f4 C6030000 		.4byte	.LASF27
 1401 01f8 01       		.byte	0x1
 1402 01f9 5601     		.2byte	0x156
 1403 01fb 80000000 		.4byte	0x80
 1404 01ff 02       		.uleb128 0x2
 1405 0200 91       		.byte	0x91
 1406 0201 77       		.sleb128 -9
 1407 0202 00       		.byte	0
 1408 0203 0D       		.uleb128 0xd
 1409 0204 B1010000 		.4byte	.LASF37
 1410 0208 01       		.byte	0x1
 1411 0209 DB01     		.2byte	0x1db
 1412 020b 80000000 		.4byte	0x80
 1413 020f 00000000 		.4byte	.LFB6
 1414 0213 40000000 		.4byte	.LFE6-.LFB6
 1415 0217 01       		.uleb128 0x1
 1416 0218 9C       		.byte	0x9c
 1417 0219 3C020000 		.4byte	0x23c
 1418 021d 0A       		.uleb128 0xa
 1419 021e C7010000 		.4byte	.LASF35
 1420 0222 01       		.byte	0x1
 1421 0223 DB01     		.2byte	0x1db
 1422 0225 80000000 		.4byte	0x80
 1423 0229 02       		.uleb128 0x2
 1424 022a 91       		.byte	0x91
 1425 022b 6F       		.sleb128 -17
 1426 022c 0B       		.uleb128 0xb
 1427 022d 91030000 		.4byte	.LASF36
 1428 0231 01       		.byte	0x1
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 41


 1429 0232 DD01     		.2byte	0x1dd
 1430 0234 80000000 		.4byte	0x80
 1431 0238 02       		.uleb128 0x2
 1432 0239 91       		.byte	0x91
 1433 023a 77       		.sleb128 -9
 1434 023b 00       		.byte	0
 1435 023c 0E       		.uleb128 0xe
 1436 023d 87020000 		.4byte	.LASF61
 1437 0241 01       		.byte	0x1
 1438 0242 0802     		.2byte	0x208
 1439 0244 A4000000 		.4byte	0xa4
 1440 0248 00000000 		.4byte	.LFB7
 1441 024c 28000000 		.4byte	.LFE7-.LFB7
 1442 0250 01       		.uleb128 0x1
 1443 0251 9C       		.byte	0x9c
 1444 0252 0F       		.uleb128 0xf
 1445 0253 98030000 		.4byte	.LASF38
 1446 0257 01       		.byte	0x1
 1447 0258 2602     		.2byte	0x226
 1448 025a B0000000 		.4byte	0xb0
 1449 025e 00000000 		.4byte	.LFB8
 1450 0262 30000000 		.4byte	.LFE8-.LFB8
 1451 0266 01       		.uleb128 0x1
 1452 0267 9C       		.byte	0x9c
 1453 0268 7C020000 		.4byte	0x27c
 1454 026c 10       		.uleb128 0x10
 1455 026d 72657300 		.ascii	"res\000"
 1456 0271 01       		.byte	0x1
 1457 0272 2802     		.2byte	0x228
 1458 0274 8C000000 		.4byte	0x8c
 1459 0278 02       		.uleb128 0x2
 1460 0279 91       		.byte	0x91
 1461 027a 76       		.sleb128 -10
 1462 027b 00       		.byte	0
 1463 027c 09       		.uleb128 0x9
 1464 027d 11020000 		.4byte	.LASF39
 1465 0281 01       		.byte	0x1
 1466 0282 4902     		.2byte	0x249
 1467 0284 00000000 		.4byte	.LFB9
 1468 0288 20000000 		.4byte	.LFE9-.LFB9
 1469 028c 01       		.uleb128 0x1
 1470 028d 9C       		.byte	0x9c
 1471 028e A2020000 		.4byte	0x2a2
 1472 0292 0A       		.uleb128 0xa
 1473 0293 62030000 		.4byte	.LASF40
 1474 0297 01       		.byte	0x1
 1475 0298 4902     		.2byte	0x249
 1476 029a B0000000 		.4byte	0xb0
 1477 029e 02       		.uleb128 0x2
 1478 029f 91       		.byte	0x91
 1479 02a0 76       		.sleb128 -10
 1480 02a1 00       		.byte	0
 1481 02a2 11       		.uleb128 0x11
 1482 02a3 CF010000 		.4byte	.LASF62
 1483 02a7 01       		.byte	0x1
 1484 02a8 6302     		.2byte	0x263
 1485 02aa 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 42


 1486 02ae 80000000 		.4byte	.LFE10-.LFB10
 1487 02b2 01       		.uleb128 0x1
 1488 02b3 9C       		.byte	0x9c
 1489 02b4 D7020000 		.4byte	0x2d7
 1490 02b8 0A       		.uleb128 0xa
 1491 02b9 52030000 		.4byte	.LASF34
 1492 02bd 01       		.byte	0x1
 1493 02be 6302     		.2byte	0x263
 1494 02c0 80000000 		.4byte	0x80
 1495 02c4 02       		.uleb128 0x2
 1496 02c5 91       		.byte	0x91
 1497 02c6 6F       		.sleb128 -17
 1498 02c7 0B       		.uleb128 0xb
 1499 02c8 1B000000 		.4byte	.LASF41
 1500 02cc 01       		.byte	0x1
 1501 02cd 6502     		.2byte	0x265
 1502 02cf BC000000 		.4byte	0xbc
 1503 02d3 02       		.uleb128 0x2
 1504 02d4 91       		.byte	0x91
 1505 02d5 74       		.sleb128 -12
 1506 02d6 00       		.byte	0
 1507 02d7 09       		.uleb128 0x9
 1508 02d8 44030000 		.4byte	.LASF42
 1509 02dc 01       		.byte	0x1
 1510 02dd B402     		.2byte	0x2b4
 1511 02df 00000000 		.4byte	.LFB11
 1512 02e3 2C000000 		.4byte	.LFE11-.LFB11
 1513 02e7 01       		.uleb128 0x1
 1514 02e8 9C       		.byte	0x9c
 1515 02e9 FD020000 		.4byte	0x2fd
 1516 02ed 0A       		.uleb128 0xa
 1517 02ee 31030000 		.4byte	.LASF43
 1518 02f2 01       		.byte	0x1
 1519 02f3 B402     		.2byte	0x2b4
 1520 02f5 B0000000 		.4byte	0xb0
 1521 02f9 02       		.uleb128 0x2
 1522 02fa 91       		.byte	0x91
 1523 02fb 76       		.sleb128 -10
 1524 02fc 00       		.byte	0
 1525 02fd 09       		.uleb128 0x9
 1526 02fe 50010000 		.4byte	.LASF44
 1527 0302 01       		.byte	0x1
 1528 0303 CF02     		.2byte	0x2cf
 1529 0305 00000000 		.4byte	.LFB12
 1530 0309 1C000000 		.4byte	.LFE12-.LFB12
 1531 030d 01       		.uleb128 0x1
 1532 030e 9C       		.byte	0x9c
 1533 030f 23030000 		.4byte	0x323
 1534 0313 0A       		.uleb128 0xa
 1535 0314 31030000 		.4byte	.LASF43
 1536 0318 01       		.byte	0x1
 1537 0319 CF02     		.2byte	0x2cf
 1538 031b BC000000 		.4byte	0xbc
 1539 031f 02       		.uleb128 0x2
 1540 0320 91       		.byte	0x91
 1541 0321 74       		.sleb128 -12
 1542 0322 00       		.byte	0
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 43


 1543 0323 0F       		.uleb128 0xf
 1544 0324 21020000 		.4byte	.LASF45
 1545 0328 01       		.byte	0x1
 1546 0329 E702     		.2byte	0x2e7
 1547 032b B0000000 		.4byte	0xb0
 1548 032f 00000000 		.4byte	.LFB13
 1549 0333 8C000000 		.4byte	.LFE13-.LFB13
 1550 0337 01       		.uleb128 0x1
 1551 0338 9C       		.byte	0x9c
 1552 0339 6B030000 		.4byte	0x36b
 1553 033d 0A       		.uleb128 0xa
 1554 033e 76030000 		.4byte	.LASF46
 1555 0342 01       		.byte	0x1
 1556 0343 E702     		.2byte	0x2e7
 1557 0345 B0000000 		.4byte	0xb0
 1558 0349 02       		.uleb128 0x2
 1559 034a 91       		.byte	0x91
 1560 034b 6E       		.sleb128 -18
 1561 034c 0B       		.uleb128 0xb
 1562 034d 5D020000 		.4byte	.LASF47
 1563 0351 01       		.byte	0x1
 1564 0352 E902     		.2byte	0x2e9
 1565 0354 B0000000 		.4byte	0xb0
 1566 0358 02       		.uleb128 0x2
 1567 0359 91       		.byte	0x91
 1568 035a 72       		.sleb128 -14
 1569 035b 0B       		.uleb128 0xb
 1570 035c 96010000 		.4byte	.LASF48
 1571 0360 01       		.byte	0x1
 1572 0361 EA02     		.2byte	0x2ea
 1573 0363 BC000000 		.4byte	0xbc
 1574 0367 02       		.uleb128 0x2
 1575 0368 91       		.byte	0x91
 1576 0369 74       		.sleb128 -12
 1577 036a 00       		.byte	0
 1578 036b 0D       		.uleb128 0xd
 1579 036c B0030000 		.4byte	.LASF49
 1580 0370 01       		.byte	0x1
 1581 0371 1103     		.2byte	0x311
 1582 0373 BC000000 		.4byte	0xbc
 1583 0377 00000000 		.4byte	.LFB14
 1584 037b 90000000 		.4byte	.LFE14-.LFB14
 1585 037f 01       		.uleb128 0x1
 1586 0380 9C       		.byte	0x9c
 1587 0381 B3030000 		.4byte	0x3b3
 1588 0385 0A       		.uleb128 0xa
 1589 0386 76030000 		.4byte	.LASF46
 1590 038a 01       		.byte	0x1
 1591 038b 1103     		.2byte	0x311
 1592 038d B0000000 		.4byte	0xb0
 1593 0391 02       		.uleb128 0x2
 1594 0392 91       		.byte	0x91
 1595 0393 5E       		.sleb128 -34
 1596 0394 0B       		.uleb128 0xb
 1597 0395 F8010000 		.4byte	.LASF50
 1598 0399 01       		.byte	0x1
 1599 039a 1403     		.2byte	0x314
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 44


 1600 039c E2000000 		.4byte	0xe2
 1601 03a0 02       		.uleb128 0x2
 1602 03a1 91       		.byte	0x91
 1603 03a2 60       		.sleb128 -32
 1604 03a3 0B       		.uleb128 0xb
 1605 03a4 96010000 		.4byte	.LASF48
 1606 03a8 01       		.byte	0x1
 1607 03a9 1503     		.2byte	0x315
 1608 03ab BC000000 		.4byte	0xbc
 1609 03af 02       		.uleb128 0x2
 1610 03b0 91       		.byte	0x91
 1611 03b1 6C       		.sleb128 -20
 1612 03b2 00       		.byte	0
 1613 03b3 0D       		.uleb128 0xd
 1614 03b4 98020000 		.4byte	.LASF51
 1615 03b8 01       		.byte	0x1
 1616 03b9 3D03     		.2byte	0x33d
 1617 03bb C8000000 		.4byte	0xc8
 1618 03bf 00000000 		.4byte	.LFB15
 1619 03c3 84000000 		.4byte	.LFE15-.LFB15
 1620 03c7 01       		.uleb128 0x1
 1621 03c8 9C       		.byte	0x9c
 1622 03c9 FB030000 		.4byte	0x3fb
 1623 03cd 0A       		.uleb128 0xa
 1624 03ce 76030000 		.4byte	.LASF46
 1625 03d2 01       		.byte	0x1
 1626 03d3 3D03     		.2byte	0x33d
 1627 03d5 B0000000 		.4byte	0xb0
 1628 03d9 02       		.uleb128 0x2
 1629 03da 91       		.byte	0x91
 1630 03db 66       		.sleb128 -26
 1631 03dc 0B       		.uleb128 0xb
 1632 03dd 22000000 		.4byte	.LASF52
 1633 03e1 01       		.byte	0x1
 1634 03e2 3F03     		.2byte	0x33f
 1635 03e4 C8000000 		.4byte	0xc8
 1636 03e8 02       		.uleb128 0x2
 1637 03e9 91       		.byte	0x91
 1638 03ea 68       		.sleb128 -24
 1639 03eb 0B       		.uleb128 0xb
 1640 03ec 96010000 		.4byte	.LASF48
 1641 03f0 01       		.byte	0x1
 1642 03f1 4003     		.2byte	0x340
 1643 03f3 BC000000 		.4byte	0xbc
 1644 03f7 02       		.uleb128 0x2
 1645 03f8 91       		.byte	0x91
 1646 03f9 6C       		.sleb128 -20
 1647 03fa 00       		.byte	0
 1648 03fb 12       		.uleb128 0x12
 1649 03fc 4F020000 		.4byte	.LASF53
 1650 0400 01       		.byte	0x1
 1651 0401 23       		.byte	0x23
 1652 0402 80000000 		.4byte	0x80
 1653 0406 05       		.uleb128 0x5
 1654 0407 03       		.byte	0x3
 1655 0408 00000000 		.4byte	ADC_2_initVar
 1656 040c 12       		.uleb128 0x12
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 45


 1657 040d DE010000 		.4byte	.LASF54
 1658 0411 01       		.byte	0x1
 1659 0412 24       		.byte	0x24
 1660 0413 1D040000 		.4byte	0x41d
 1661 0417 05       		.uleb128 0x5
 1662 0418 03       		.byte	0x3
 1663 0419 00000000 		.4byte	ADC_2_offset
 1664 041d 05       		.uleb128 0x5
 1665 041e B0000000 		.4byte	0xb0
 1666 0422 12       		.uleb128 0x12
 1667 0423 13030000 		.4byte	.LASF55
 1668 0427 01       		.byte	0x1
 1669 0428 25       		.byte	0x25
 1670 0429 1D040000 		.4byte	0x41d
 1671 042d 05       		.uleb128 0x5
 1672 042e 03       		.byte	0x3
 1673 042f 00000000 		.4byte	ADC_2_countsPerVolt
 1674 0433 12       		.uleb128 0x12
 1675 0434 EF020000 		.4byte	.LASF56
 1676 0438 01       		.byte	0x1
 1677 0439 26       		.byte	0x26
 1678 043a 44040000 		.4byte	0x444
 1679 043e 05       		.uleb128 0x5
 1680 043f 03       		.byte	0x3
 1681 0440 00000000 		.4byte	ADC_2_countsPer10Volt
 1682 0444 05       		.uleb128 0x5
 1683 0445 BC000000 		.4byte	0xbc
 1684 0449 12       		.uleb128 0x12
 1685 044a B3020000 		.4byte	.LASF57
 1686 044e 01       		.byte	0x1
 1687 044f 27       		.byte	0x27
 1688 0450 1D040000 		.4byte	0x41d
 1689 0454 05       		.uleb128 0x5
 1690 0455 03       		.byte	0x3
 1691 0456 00000000 		.4byte	ADC_2_shift
 1692 045a 00       		.byte	0
 1693              		.section	.debug_abbrev,"",%progbits
 1694              	.Ldebug_abbrev0:
 1695 0000 01       		.uleb128 0x1
 1696 0001 11       		.uleb128 0x11
 1697 0002 01       		.byte	0x1
 1698 0003 25       		.uleb128 0x25
 1699 0004 0E       		.uleb128 0xe
 1700 0005 13       		.uleb128 0x13
 1701 0006 0B       		.uleb128 0xb
 1702 0007 03       		.uleb128 0x3
 1703 0008 0E       		.uleb128 0xe
 1704 0009 1B       		.uleb128 0x1b
 1705 000a 0E       		.uleb128 0xe
 1706 000b 55       		.uleb128 0x55
 1707 000c 17       		.uleb128 0x17
 1708 000d 11       		.uleb128 0x11
 1709 000e 01       		.uleb128 0x1
 1710 000f 10       		.uleb128 0x10
 1711 0010 17       		.uleb128 0x17
 1712 0011 00       		.byte	0
 1713 0012 00       		.byte	0
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 46


 1714 0013 02       		.uleb128 0x2
 1715 0014 24       		.uleb128 0x24
 1716 0015 00       		.byte	0
 1717 0016 0B       		.uleb128 0xb
 1718 0017 0B       		.uleb128 0xb
 1719 0018 3E       		.uleb128 0x3e
 1720 0019 0B       		.uleb128 0xb
 1721 001a 03       		.uleb128 0x3
 1722 001b 08       		.uleb128 0x8
 1723 001c 00       		.byte	0
 1724 001d 00       		.byte	0
 1725 001e 03       		.uleb128 0x3
 1726 001f 24       		.uleb128 0x24
 1727 0020 00       		.byte	0
 1728 0021 0B       		.uleb128 0xb
 1729 0022 0B       		.uleb128 0xb
 1730 0023 3E       		.uleb128 0x3e
 1731 0024 0B       		.uleb128 0xb
 1732 0025 03       		.uleb128 0x3
 1733 0026 0E       		.uleb128 0xe
 1734 0027 00       		.byte	0
 1735 0028 00       		.byte	0
 1736 0029 04       		.uleb128 0x4
 1737 002a 16       		.uleb128 0x16
 1738 002b 00       		.byte	0
 1739 002c 03       		.uleb128 0x3
 1740 002d 0E       		.uleb128 0xe
 1741 002e 3A       		.uleb128 0x3a
 1742 002f 0B       		.uleb128 0xb
 1743 0030 3B       		.uleb128 0x3b
 1744 0031 05       		.uleb128 0x5
 1745 0032 49       		.uleb128 0x49
 1746 0033 13       		.uleb128 0x13
 1747 0034 00       		.byte	0
 1748 0035 00       		.byte	0
 1749 0036 05       		.uleb128 0x5
 1750 0037 35       		.uleb128 0x35
 1751 0038 00       		.byte	0
 1752 0039 49       		.uleb128 0x49
 1753 003a 13       		.uleb128 0x13
 1754 003b 00       		.byte	0
 1755 003c 00       		.byte	0
 1756 003d 06       		.uleb128 0x6
 1757 003e 2E       		.uleb128 0x2e
 1758 003f 00       		.byte	0
 1759 0040 3F       		.uleb128 0x3f
 1760 0041 19       		.uleb128 0x19
 1761 0042 03       		.uleb128 0x3
 1762 0043 0E       		.uleb128 0xe
 1763 0044 3A       		.uleb128 0x3a
 1764 0045 0B       		.uleb128 0xb
 1765 0046 3B       		.uleb128 0x3b
 1766 0047 0B       		.uleb128 0xb
 1767 0048 27       		.uleb128 0x27
 1768 0049 19       		.uleb128 0x19
 1769 004a 11       		.uleb128 0x11
 1770 004b 01       		.uleb128 0x1
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 47


 1771 004c 12       		.uleb128 0x12
 1772 004d 06       		.uleb128 0x6
 1773 004e 40       		.uleb128 0x40
 1774 004f 18       		.uleb128 0x18
 1775 0050 9642     		.uleb128 0x2116
 1776 0052 19       		.uleb128 0x19
 1777 0053 00       		.byte	0
 1778 0054 00       		.byte	0
 1779 0055 07       		.uleb128 0x7
 1780 0056 2E       		.uleb128 0x2e
 1781 0057 01       		.byte	0x1
 1782 0058 3F       		.uleb128 0x3f
 1783 0059 19       		.uleb128 0x19
 1784 005a 03       		.uleb128 0x3
 1785 005b 0E       		.uleb128 0xe
 1786 005c 3A       		.uleb128 0x3a
 1787 005d 0B       		.uleb128 0xb
 1788 005e 3B       		.uleb128 0x3b
 1789 005f 0B       		.uleb128 0xb
 1790 0060 27       		.uleb128 0x27
 1791 0061 19       		.uleb128 0x19
 1792 0062 11       		.uleb128 0x11
 1793 0063 01       		.uleb128 0x1
 1794 0064 12       		.uleb128 0x12
 1795 0065 06       		.uleb128 0x6
 1796 0066 40       		.uleb128 0x40
 1797 0067 18       		.uleb128 0x18
 1798 0068 9642     		.uleb128 0x2116
 1799 006a 19       		.uleb128 0x19
 1800 006b 01       		.uleb128 0x1
 1801 006c 13       		.uleb128 0x13
 1802 006d 00       		.byte	0
 1803 006e 00       		.byte	0
 1804 006f 08       		.uleb128 0x8
 1805 0070 34       		.uleb128 0x34
 1806 0071 00       		.byte	0
 1807 0072 03       		.uleb128 0x3
 1808 0073 0E       		.uleb128 0xe
 1809 0074 3A       		.uleb128 0x3a
 1810 0075 0B       		.uleb128 0xb
 1811 0076 3B       		.uleb128 0x3b
 1812 0077 0B       		.uleb128 0xb
 1813 0078 49       		.uleb128 0x49
 1814 0079 13       		.uleb128 0x13
 1815 007a 02       		.uleb128 0x2
 1816 007b 18       		.uleb128 0x18
 1817 007c 00       		.byte	0
 1818 007d 00       		.byte	0
 1819 007e 09       		.uleb128 0x9
 1820 007f 2E       		.uleb128 0x2e
 1821 0080 01       		.byte	0x1
 1822 0081 3F       		.uleb128 0x3f
 1823 0082 19       		.uleb128 0x19
 1824 0083 03       		.uleb128 0x3
 1825 0084 0E       		.uleb128 0xe
 1826 0085 3A       		.uleb128 0x3a
 1827 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 48


 1828 0087 3B       		.uleb128 0x3b
 1829 0088 05       		.uleb128 0x5
 1830 0089 27       		.uleb128 0x27
 1831 008a 19       		.uleb128 0x19
 1832 008b 11       		.uleb128 0x11
 1833 008c 01       		.uleb128 0x1
 1834 008d 12       		.uleb128 0x12
 1835 008e 06       		.uleb128 0x6
 1836 008f 40       		.uleb128 0x40
 1837 0090 18       		.uleb128 0x18
 1838 0091 9742     		.uleb128 0x2117
 1839 0093 19       		.uleb128 0x19
 1840 0094 01       		.uleb128 0x1
 1841 0095 13       		.uleb128 0x13
 1842 0096 00       		.byte	0
 1843 0097 00       		.byte	0
 1844 0098 0A       		.uleb128 0xa
 1845 0099 05       		.uleb128 0x5
 1846 009a 00       		.byte	0
 1847 009b 03       		.uleb128 0x3
 1848 009c 0E       		.uleb128 0xe
 1849 009d 3A       		.uleb128 0x3a
 1850 009e 0B       		.uleb128 0xb
 1851 009f 3B       		.uleb128 0x3b
 1852 00a0 05       		.uleb128 0x5
 1853 00a1 49       		.uleb128 0x49
 1854 00a2 13       		.uleb128 0x13
 1855 00a3 02       		.uleb128 0x2
 1856 00a4 18       		.uleb128 0x18
 1857 00a5 00       		.byte	0
 1858 00a6 00       		.byte	0
 1859 00a7 0B       		.uleb128 0xb
 1860 00a8 34       		.uleb128 0x34
 1861 00a9 00       		.byte	0
 1862 00aa 03       		.uleb128 0x3
 1863 00ab 0E       		.uleb128 0xe
 1864 00ac 3A       		.uleb128 0x3a
 1865 00ad 0B       		.uleb128 0xb
 1866 00ae 3B       		.uleb128 0x3b
 1867 00af 05       		.uleb128 0x5
 1868 00b0 49       		.uleb128 0x49
 1869 00b1 13       		.uleb128 0x13
 1870 00b2 02       		.uleb128 0x2
 1871 00b3 18       		.uleb128 0x18
 1872 00b4 00       		.byte	0
 1873 00b5 00       		.byte	0
 1874 00b6 0C       		.uleb128 0xc
 1875 00b7 2E       		.uleb128 0x2e
 1876 00b8 01       		.byte	0x1
 1877 00b9 3F       		.uleb128 0x3f
 1878 00ba 19       		.uleb128 0x19
 1879 00bb 03       		.uleb128 0x3
 1880 00bc 0E       		.uleb128 0xe
 1881 00bd 3A       		.uleb128 0x3a
 1882 00be 0B       		.uleb128 0xb
 1883 00bf 3B       		.uleb128 0x3b
 1884 00c0 05       		.uleb128 0x5
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 49


 1885 00c1 27       		.uleb128 0x27
 1886 00c2 19       		.uleb128 0x19
 1887 00c3 11       		.uleb128 0x11
 1888 00c4 01       		.uleb128 0x1
 1889 00c5 12       		.uleb128 0x12
 1890 00c6 06       		.uleb128 0x6
 1891 00c7 40       		.uleb128 0x40
 1892 00c8 18       		.uleb128 0x18
 1893 00c9 9642     		.uleb128 0x2116
 1894 00cb 19       		.uleb128 0x19
 1895 00cc 01       		.uleb128 0x1
 1896 00cd 13       		.uleb128 0x13
 1897 00ce 00       		.byte	0
 1898 00cf 00       		.byte	0
 1899 00d0 0D       		.uleb128 0xd
 1900 00d1 2E       		.uleb128 0x2e
 1901 00d2 01       		.byte	0x1
 1902 00d3 3F       		.uleb128 0x3f
 1903 00d4 19       		.uleb128 0x19
 1904 00d5 03       		.uleb128 0x3
 1905 00d6 0E       		.uleb128 0xe
 1906 00d7 3A       		.uleb128 0x3a
 1907 00d8 0B       		.uleb128 0xb
 1908 00d9 3B       		.uleb128 0x3b
 1909 00da 05       		.uleb128 0x5
 1910 00db 27       		.uleb128 0x27
 1911 00dc 19       		.uleb128 0x19
 1912 00dd 49       		.uleb128 0x49
 1913 00de 13       		.uleb128 0x13
 1914 00df 11       		.uleb128 0x11
 1915 00e0 01       		.uleb128 0x1
 1916 00e1 12       		.uleb128 0x12
 1917 00e2 06       		.uleb128 0x6
 1918 00e3 40       		.uleb128 0x40
 1919 00e4 18       		.uleb128 0x18
 1920 00e5 9642     		.uleb128 0x2116
 1921 00e7 19       		.uleb128 0x19
 1922 00e8 01       		.uleb128 0x1
 1923 00e9 13       		.uleb128 0x13
 1924 00ea 00       		.byte	0
 1925 00eb 00       		.byte	0
 1926 00ec 0E       		.uleb128 0xe
 1927 00ed 2E       		.uleb128 0x2e
 1928 00ee 00       		.byte	0
 1929 00ef 3F       		.uleb128 0x3f
 1930 00f0 19       		.uleb128 0x19
 1931 00f1 03       		.uleb128 0x3
 1932 00f2 0E       		.uleb128 0xe
 1933 00f3 3A       		.uleb128 0x3a
 1934 00f4 0B       		.uleb128 0xb
 1935 00f5 3B       		.uleb128 0x3b
 1936 00f6 05       		.uleb128 0x5
 1937 00f7 27       		.uleb128 0x27
 1938 00f8 19       		.uleb128 0x19
 1939 00f9 49       		.uleb128 0x49
 1940 00fa 13       		.uleb128 0x13
 1941 00fb 11       		.uleb128 0x11
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 50


 1942 00fc 01       		.uleb128 0x1
 1943 00fd 12       		.uleb128 0x12
 1944 00fe 06       		.uleb128 0x6
 1945 00ff 40       		.uleb128 0x40
 1946 0100 18       		.uleb128 0x18
 1947 0101 9742     		.uleb128 0x2117
 1948 0103 19       		.uleb128 0x19
 1949 0104 00       		.byte	0
 1950 0105 00       		.byte	0
 1951 0106 0F       		.uleb128 0xf
 1952 0107 2E       		.uleb128 0x2e
 1953 0108 01       		.byte	0x1
 1954 0109 3F       		.uleb128 0x3f
 1955 010a 19       		.uleb128 0x19
 1956 010b 03       		.uleb128 0x3
 1957 010c 0E       		.uleb128 0xe
 1958 010d 3A       		.uleb128 0x3a
 1959 010e 0B       		.uleb128 0xb
 1960 010f 3B       		.uleb128 0x3b
 1961 0110 05       		.uleb128 0x5
 1962 0111 27       		.uleb128 0x27
 1963 0112 19       		.uleb128 0x19
 1964 0113 49       		.uleb128 0x49
 1965 0114 13       		.uleb128 0x13
 1966 0115 11       		.uleb128 0x11
 1967 0116 01       		.uleb128 0x1
 1968 0117 12       		.uleb128 0x12
 1969 0118 06       		.uleb128 0x6
 1970 0119 40       		.uleb128 0x40
 1971 011a 18       		.uleb128 0x18
 1972 011b 9742     		.uleb128 0x2117
 1973 011d 19       		.uleb128 0x19
 1974 011e 01       		.uleb128 0x1
 1975 011f 13       		.uleb128 0x13
 1976 0120 00       		.byte	0
 1977 0121 00       		.byte	0
 1978 0122 10       		.uleb128 0x10
 1979 0123 34       		.uleb128 0x34
 1980 0124 00       		.byte	0
 1981 0125 03       		.uleb128 0x3
 1982 0126 08       		.uleb128 0x8
 1983 0127 3A       		.uleb128 0x3a
 1984 0128 0B       		.uleb128 0xb
 1985 0129 3B       		.uleb128 0x3b
 1986 012a 05       		.uleb128 0x5
 1987 012b 49       		.uleb128 0x49
 1988 012c 13       		.uleb128 0x13
 1989 012d 02       		.uleb128 0x2
 1990 012e 18       		.uleb128 0x18
 1991 012f 00       		.byte	0
 1992 0130 00       		.byte	0
 1993 0131 11       		.uleb128 0x11
 1994 0132 2E       		.uleb128 0x2e
 1995 0133 01       		.byte	0x1
 1996 0134 03       		.uleb128 0x3
 1997 0135 0E       		.uleb128 0xe
 1998 0136 3A       		.uleb128 0x3a
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 51


 1999 0137 0B       		.uleb128 0xb
 2000 0138 3B       		.uleb128 0x3b
 2001 0139 05       		.uleb128 0x5
 2002 013a 27       		.uleb128 0x27
 2003 013b 19       		.uleb128 0x19
 2004 013c 11       		.uleb128 0x11
 2005 013d 01       		.uleb128 0x1
 2006 013e 12       		.uleb128 0x12
 2007 013f 06       		.uleb128 0x6
 2008 0140 40       		.uleb128 0x40
 2009 0141 18       		.uleb128 0x18
 2010 0142 9642     		.uleb128 0x2116
 2011 0144 19       		.uleb128 0x19
 2012 0145 01       		.uleb128 0x1
 2013 0146 13       		.uleb128 0x13
 2014 0147 00       		.byte	0
 2015 0148 00       		.byte	0
 2016 0149 12       		.uleb128 0x12
 2017 014a 34       		.uleb128 0x34
 2018 014b 00       		.byte	0
 2019 014c 03       		.uleb128 0x3
 2020 014d 0E       		.uleb128 0xe
 2021 014e 3A       		.uleb128 0x3a
 2022 014f 0B       		.uleb128 0xb
 2023 0150 3B       		.uleb128 0x3b
 2024 0151 0B       		.uleb128 0xb
 2025 0152 49       		.uleb128 0x49
 2026 0153 13       		.uleb128 0x13
 2027 0154 3F       		.uleb128 0x3f
 2028 0155 19       		.uleb128 0x19
 2029 0156 02       		.uleb128 0x2
 2030 0157 18       		.uleb128 0x18
 2031 0158 00       		.byte	0
 2032 0159 00       		.byte	0
 2033 015a 00       		.byte	0
 2034              		.section	.debug_aranges,"",%progbits
 2035 0000 94000000 		.4byte	0x94
 2036 0004 0200     		.2byte	0x2
 2037 0006 00000000 		.4byte	.Ldebug_info0
 2038 000a 04       		.byte	0x4
 2039 000b 00       		.byte	0
 2040 000c 0000     		.2byte	0
 2041 000e 0000     		.2byte	0
 2042 0010 00000000 		.4byte	.LFB0
 2043 0014 24000000 		.4byte	.LFE0-.LFB0
 2044 0018 00000000 		.4byte	.LFB1
 2045 001c 40000000 		.4byte	.LFE1-.LFB1
 2046 0020 00000000 		.4byte	.LFB2
 2047 0024 CC000000 		.4byte	.LFE2-.LFB2
 2048 0028 00000000 		.4byte	.LFB3
 2049 002c 5C000000 		.4byte	.LFE3-.LFB3
 2050 0030 00000000 		.4byte	.LFB4
 2051 0034 40000000 		.4byte	.LFE4-.LFB4
 2052 0038 00000000 		.4byte	.LFB5
 2053 003c 54000000 		.4byte	.LFE5-.LFB5
 2054 0040 00000000 		.4byte	.LFB6
 2055 0044 40000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 52


 2056 0048 00000000 		.4byte	.LFB7
 2057 004c 28000000 		.4byte	.LFE7-.LFB7
 2058 0050 00000000 		.4byte	.LFB8
 2059 0054 30000000 		.4byte	.LFE8-.LFB8
 2060 0058 00000000 		.4byte	.LFB9
 2061 005c 20000000 		.4byte	.LFE9-.LFB9
 2062 0060 00000000 		.4byte	.LFB10
 2063 0064 80000000 		.4byte	.LFE10-.LFB10
 2064 0068 00000000 		.4byte	.LFB11
 2065 006c 2C000000 		.4byte	.LFE11-.LFB11
 2066 0070 00000000 		.4byte	.LFB12
 2067 0074 1C000000 		.4byte	.LFE12-.LFB12
 2068 0078 00000000 		.4byte	.LFB13
 2069 007c 8C000000 		.4byte	.LFE13-.LFB13
 2070 0080 00000000 		.4byte	.LFB14
 2071 0084 90000000 		.4byte	.LFE14-.LFB14
 2072 0088 00000000 		.4byte	.LFB15
 2073 008c 84000000 		.4byte	.LFE15-.LFB15
 2074 0090 00000000 		.4byte	0
 2075 0094 00000000 		.4byte	0
 2076              		.section	.debug_ranges,"",%progbits
 2077              	.Ldebug_ranges0:
 2078 0000 00000000 		.4byte	.LFB0
 2079 0004 24000000 		.4byte	.LFE0
 2080 0008 00000000 		.4byte	.LFB1
 2081 000c 40000000 		.4byte	.LFE1
 2082 0010 00000000 		.4byte	.LFB2
 2083 0014 CC000000 		.4byte	.LFE2
 2084 0018 00000000 		.4byte	.LFB3
 2085 001c 5C000000 		.4byte	.LFE3
 2086 0020 00000000 		.4byte	.LFB4
 2087 0024 40000000 		.4byte	.LFE4
 2088 0028 00000000 		.4byte	.LFB5
 2089 002c 54000000 		.4byte	.LFE5
 2090 0030 00000000 		.4byte	.LFB6
 2091 0034 40000000 		.4byte	.LFE6
 2092 0038 00000000 		.4byte	.LFB7
 2093 003c 28000000 		.4byte	.LFE7
 2094 0040 00000000 		.4byte	.LFB8
 2095 0044 30000000 		.4byte	.LFE8
 2096 0048 00000000 		.4byte	.LFB9
 2097 004c 20000000 		.4byte	.LFE9
 2098 0050 00000000 		.4byte	.LFB10
 2099 0054 80000000 		.4byte	.LFE10
 2100 0058 00000000 		.4byte	.LFB11
 2101 005c 2C000000 		.4byte	.LFE11
 2102 0060 00000000 		.4byte	.LFB12
 2103 0064 1C000000 		.4byte	.LFE12
 2104 0068 00000000 		.4byte	.LFB13
 2105 006c 8C000000 		.4byte	.LFE13
 2106 0070 00000000 		.4byte	.LFB14
 2107 0074 90000000 		.4byte	.LFE14
 2108 0078 00000000 		.4byte	.LFB15
 2109 007c 84000000 		.4byte	.LFE15
 2110 0080 00000000 		.4byte	0
 2111 0084 00000000 		.4byte	0
 2112              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 53


 2113              	.Ldebug_line0:
 2114 0000 DE010000 		.section	.debug_str,"MS",%progbits,1
 2114      02004200 
 2114      00000201 
 2114      FB0E0D00 
 2114      01010101 
 2115              	.LASF13:
 2116 0000 75696E74 		.ascii	"uint16\000"
 2116      313600
 2117              	.LASF32:
 2118 0007 4144435F 		.ascii	"ADC_2_SetResolution\000"
 2118      325F5365 
 2118      74526573 
 2118      6F6C7574 
 2118      696F6E00 
 2119              	.LASF41:
 2120 001b 636F756E 		.ascii	"counts\000"
 2120      747300
 2121              	.LASF52:
 2122 0022 766F6C74 		.ascii	"volts\000"
 2122      7300
 2123              	.LASF58:
 2124 0028 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2124      43313120 
 2124      352E342E 
 2124      31203230 
 2124      31363036 
 2125 005b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2125      20726576 
 2125      6973696F 
 2125      6E203233 
 2125      37373135 
 2126 008e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2126      66756E63 
 2126      74696F6E 
 2126      2D736563 
 2126      74696F6E 
 2127              	.LASF9:
 2128 00b6 6C6F6E67 		.ascii	"long long unsigned int\000"
 2128      206C6F6E 
 2128      6720756E 
 2128      7369676E 
 2128      65642069 
 2129              	.LASF60:
 2130 00cd 433A5C55 		.ascii	"C:\\Users\\merce\\Documents\\scope\\CyScope\\CY8CKI"
 2130      73657273 
 2130      5C6D6572 
 2130      63655C44 
 2130      6F63756D 
 2131 00fa 542D3034 		.ascii	"T-043\\ScopeKitProg\\Scope_CY8KIT-043.cydsn\000"
 2131      335C5363 
 2131      6F70654B 
 2131      69745072 
 2131      6F675C53 
 2132              	.LASF1:
 2133 0124 6C6F6E67 		.ascii	"long long int\000"
 2133      206C6F6E 
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 54


 2133      6720696E 
 2133      7400
 2134              	.LASF3:
 2135 0132 7369676E 		.ascii	"signed char\000"
 2135      65642063 
 2135      68617200 
 2136              	.LASF25:
 2137 013e 4144435F 		.ascii	"ADC_2_Start\000"
 2137      325F5374 
 2137      61727400 
 2138              	.LASF17:
 2139 014a 696E7433 		.ascii	"int32\000"
 2139      3200
 2140              	.LASF44:
 2141 0150 4144435F 		.ascii	"ADC_2_SetScaledGain\000"
 2141      325F5365 
 2141      74536361 
 2141      6C656447 
 2141      61696E00 
 2142              	.LASF31:
 2143 0164 4144435F 		.ascii	"ADC_2_SetPower\000"
 2143      325F5365 
 2143      74506F77 
 2143      657200
 2144              	.LASF7:
 2145 0173 6C6F6E67 		.ascii	"long int\000"
 2145      20696E74 
 2145      00
 2146              	.LASF23:
 2147 017c 72656731 		.ascii	"reg16\000"
 2147      3600
 2148              	.LASF12:
 2149 0182 75696E74 		.ascii	"uint8\000"
 2149      3800
 2150              	.LASF20:
 2151 0188 646F7562 		.ascii	"double\000"
 2151      6C6500
 2152              	.LASF14:
 2153 018f 75696E74 		.ascii	"uint32\000"
 2153      333200
 2154              	.LASF48:
 2155 0196 636F756E 		.ascii	"countsPer10Volt\000"
 2155      74735065 
 2155      72313056 
 2155      6F6C7400 
 2156              	.LASF30:
 2157 01a6 4144435F 		.ascii	"ADC_2_Stop\000"
 2157      325F5374 
 2157      6F7000
 2158              	.LASF37:
 2159 01b1 4144435F 		.ascii	"ADC_2_IsEndConversion\000"
 2159      325F4973 
 2159      456E6443 
 2159      6F6E7665 
 2159      7273696F 
 2160              	.LASF35:
 2161 01c7 7265744D 		.ascii	"retMode\000"
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 55


 2161      6F646500 
 2162              	.LASF62:
 2163 01cf 4144435F 		.ascii	"ADC_2_CalcGain\000"
 2163      325F4361 
 2163      6C634761 
 2163      696E00
 2164              	.LASF54:
 2165 01de 4144435F 		.ascii	"ADC_2_offset\000"
 2165      325F6F66 
 2165      66736574 
 2165      00
 2166              	.LASF0:
 2167 01eb 756E7369 		.ascii	"unsigned int\000"
 2167      676E6564 
 2167      20696E74 
 2167      00
 2168              	.LASF50:
 2169 01f8 75566F6C 		.ascii	"uVolts\000"
 2169      747300
 2170              	.LASF8:
 2171 01ff 6C6F6E67 		.ascii	"long unsigned int\000"
 2171      20756E73 
 2171      69676E65 
 2171      6420696E 
 2171      7400
 2172              	.LASF39:
 2173 0211 4144435F 		.ascii	"ADC_2_SetOffset\000"
 2173      325F5365 
 2173      744F6666 
 2173      73657400 
 2174              	.LASF45:
 2175 0221 4144435F 		.ascii	"ADC_2_CountsTo_mVolts\000"
 2175      325F436F 
 2175      756E7473 
 2175      546F5F6D 
 2175      566F6C74 
 2176              	.LASF6:
 2177 0237 73686F72 		.ascii	"short unsigned int\000"
 2177      7420756E 
 2177      7369676E 
 2177      65642069 
 2177      6E7400
 2178              	.LASF15:
 2179 024a 696E7438 		.ascii	"int8\000"
 2179      00
 2180              	.LASF53:
 2181 024f 4144435F 		.ascii	"ADC_2_initVar\000"
 2181      325F696E 
 2181      69745661 
 2181      7200
 2182              	.LASF47:
 2183 025d 6D566F6C 		.ascii	"mVolts\000"
 2183      747300
 2184              	.LASF24:
 2185 0264 72656733 		.ascii	"reg32\000"
 2185      3200
 2186              	.LASF18:
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 56


 2187 026a 666C6F61 		.ascii	"float32\000"
 2187      74333200 
 2188              	.LASF10:
 2189 0272 73697A65 		.ascii	"sizetype\000"
 2189      74797065 
 2189      00
 2190              	.LASF2:
 2191 027b 6C6F6E67 		.ascii	"long double\000"
 2191      20646F75 
 2191      626C6500 
 2192              	.LASF61:
 2193 0287 4144435F 		.ascii	"ADC_2_GetResult8\000"
 2193      325F4765 
 2193      74526573 
 2193      756C7438 
 2193      00
 2194              	.LASF51:
 2195 0298 4144435F 		.ascii	"ADC_2_CountsTo_Volts\000"
 2195      325F436F 
 2195      756E7473 
 2195      546F5F56 
 2195      6F6C7473 
 2196              	.LASF21:
 2197 02ad 696E7436 		.ascii	"int64\000"
 2197      3400
 2198              	.LASF57:
 2199 02b3 4144435F 		.ascii	"ADC_2_shift\000"
 2199      325F7368 
 2199      69667400 
 2200              	.LASF19:
 2201 02bf 666C6F61 		.ascii	"float\000"
 2201      7400
 2202              	.LASF59:
 2203 02c5 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_2.c\000"
 2203      72617465 
 2203      645F536F 
 2203      75726365 
 2203      5C50536F 
 2204              	.LASF33:
 2205 02e4 706F7765 		.ascii	"power\000"
 2205      7200
 2206              	.LASF22:
 2207 02ea 72656738 		.ascii	"reg8\000"
 2207      00
 2208              	.LASF56:
 2209 02ef 4144435F 		.ascii	"ADC_2_countsPer10Volt\000"
 2209      325F636F 
 2209      756E7473 
 2209      50657231 
 2209      30566F6C 
 2210              	.LASF4:
 2211 0305 756E7369 		.ascii	"unsigned char\000"
 2211      676E6564 
 2211      20636861 
 2211      7200
 2212              	.LASF55:
 2213 0313 4144435F 		.ascii	"ADC_2_countsPerVolt\000"
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 57


 2213      325F636F 
 2213      756E7473 
 2213      50657256 
 2213      6F6C7400 
 2214              	.LASF5:
 2215 0327 73686F72 		.ascii	"short int\000"
 2215      7420696E 
 2215      7400
 2216              	.LASF43:
 2217 0331 61646347 		.ascii	"adcGain\000"
 2217      61696E00 
 2218              	.LASF26:
 2219 0339 4144435F 		.ascii	"ADC_2_Init\000"
 2219      325F496E 
 2219      697400
 2220              	.LASF42:
 2221 0344 4144435F 		.ascii	"ADC_2_SetGain\000"
 2221      325F5365 
 2221      74476169 
 2221      6E00
 2222              	.LASF34:
 2223 0352 7265736F 		.ascii	"resolution\000"
 2223      6C757469 
 2223      6F6E00
 2224              	.LASF11:
 2225 035d 63686172 		.ascii	"char\000"
 2225      00
 2226              	.LASF40:
 2227 0362 6F666673 		.ascii	"offset\000"
 2227      657400
 2228              	.LASF29:
 2229 0369 4144435F 		.ascii	"ADC_2_Enable\000"
 2229      325F456E 
 2229      61626C65 
 2229      00
 2230              	.LASF46:
 2231 0376 61646343 		.ascii	"adcCounts\000"
 2231      6F756E74 
 2231      7300
 2232              	.LASF28:
 2233 0380 656E6162 		.ascii	"enableInterrupts\000"
 2233      6C65496E 
 2233      74657272 
 2233      75707473 
 2233      00
 2234              	.LASF36:
 2235 0391 73746174 		.ascii	"status\000"
 2235      757300
 2236              	.LASF38:
 2237 0398 4144435F 		.ascii	"ADC_2_GetResult16\000"
 2237      325F4765 
 2237      74526573 
 2237      756C7431 
 2237      3600
 2238              	.LASF16:
 2239 03aa 696E7431 		.ascii	"int16\000"
 2239      3600
ARM GAS  C:\Users\merce\AppData\Local\Temp\ccZuFx3f.s 			page 58


 2240              	.LASF49:
 2241 03b0 4144435F 		.ascii	"ADC_2_CountsTo_uVolts\000"
 2241      325F436F 
 2241      756E7473 
 2241      546F5F75 
 2241      566F6C74 
 2242              	.LASF27:
 2243 03c6 746D7052 		.ascii	"tmpReg\000"
 2243      656700
 2244              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
